DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 32
DEBUG:parso.python.diff:-> code[replace] old[1:16] new[1:32]
DEBUG:parso.python.diff:parse_part from 1 to 32 (to 31 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3317; new: 3317
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 16 (to 18 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[9:3317] new[9:3317]
DEBUG:parso.python.diff:copy old[19:3316] new[17:3316]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 32; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:32] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[5:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.utils.multiclass', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.utils._random', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'torch.utils.tensorboard', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'torch.utils.tensorboard.writer', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.event_pb2', 'google.protobuf', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'google.protobuf.internal', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.descriptor', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins', 'tensorboard.plugins.projector', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorboard.plugins.projector.metadata', 'tensorboard.plugins.projector.projector_config_pb2', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'absl', 'absl.flags', 'absl.flags._argument_parser', 'csv', '_csv', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'absl.flags._validators', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary.writer', 'tensorboard.summary.writer.event_file_writer', 'tensorboard.summary.writer.record_writer', 'torch.utils.tensorboard._convert_np', 'torch.utils.tensorboard._embedding', 'torch.utils.tensorboard._utils', 'torch.utils.tensorboard._onnx_graph', 'torch.utils.tensorboard._pytorch_graph', 'torch.utils.tensorboard._proto_graph', 'torch.utils.tensorboard.summary', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'mlflow', 'mlflow.version', 'mlflow.utils', 'mlflow.utils.annotations', 'mlflow.utils.logging_utils', 'logging.config', 'socketserver', 'mlflow.tracking', 'mlflow.tracking.client', 'mlflow.entities', 'mlflow.entities.experiment', 'mlflow.entities._mlflow_object', 'mlflow.entities.experiment_tag', 'mlflow.protos', 'mlflow.protos.service_pb2', 'google.protobuf.service', 'google.protobuf.service_reflection', 'mlflow.protos.scalapb', 'mlflow.protos.scalapb.scalapb_pb2', 'google.protobuf.descriptor_pb2', 'mlflow.protos.databricks_pb2', 'mlflow.entities.file_info', 'mlflow.entities.lifecycle_stage', 'mlflow.entities.view_type', 'mlflow.exceptions', 'mlflow.entities.metric', 'mlflow.entities.param', 'mlflow.entities.run', 'mlflow.entities.run_data', 'mlflow.entities.run_tag', 'mlflow.entities.run_info', 'mlflow.entities.run_status', 'mlflow.entities.source_type', 'mlflow.entities.model_registry', 'mlflow.entities.model_registry.registered_model', 'mlflow.entities.model_registry.model_version', 'mlflow.entities.model_registry._model_registry_entity', 'mlflow.entities.model_registry.model_version_tag', 'mlflow.protos.model_registry_pb2', 'mlflow.entities.model_registry.model_version_status', 'mlflow.entities.model_registry.registered_model_tag', 'mlflow.entities.model_registry.model_version_stages', 'mlflow.store', 'mlflow.store.tracking', 'mlflow.store.tracking.abstract_store', 'mlflow.store.entities', 'mlflow.store.entities.paged_list', 'mlflow.store.artifact', 'mlflow.store.artifact.artifact_repo', 'mlflow.utils.validation', 'mlflow.store.db', 'mlflow.store.db.db_types', 'mlflow.utils.string_utils', 'mlflow.store.model_registry', 'mlflow.tracking._model_registry', 'mlflow.tracking._model_registry.client', 'mlflow.tracking._model_registry.utils', 'mlflow.store.model_registry.rest_store', 'mlflow.store.model_registry.abstract_store', 'mlflow.utils.proto_json_utils', 'google.protobuf.json_format', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'mlflow.types', 'mlflow.types.schema', 'mlflow.utils.rest_utils', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'brotli', 'brotli.brotli', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'mlflow.tracking._model_registry.registry', 'mlflow.tracking.registry', 'entrypoints', 'mlflow.utils.uri', 'six.moves.urllib', 'mlflow.tracking._tracking_service', 'mlflow.tracking._tracking_service.utils', 'mlflow.store.tracking.file_store', 'mlflow.models', 'mlflow.models.model', 'mlflow.models.signature', 'mlflow.types.utils', 'mlflow.utils.file_utils', 'six.moves.urllib.request', 'six.moves.urllib.parse', 'mlflow.models.flavor_backend', 'mlflow.models.utils', 'mlflow.utils.env', 'mlflow.utils.search_utils', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'mlflow.store.model_registry.dbmodels', 'mlflow.store.model_registry.dbmodels.models', 'sqlalchemy', 'sqlalchemy.util', 'sqlalchemy.util._collections', 'sqlalchemy.util.compat', 'sqlalchemy.util.deprecations', 'sqlalchemy.util.langhelpers', 'sqlalchemy.exc', 'sqlalchemy.inspection', 'sqlalchemy.schema', 'sqlalchemy.sql', 'sqlalchemy.sql.expression', 'sqlalchemy.sql.base', 'sqlalchemy.sql.visitors', 'sqlalchemy.sql.dml', 'sqlalchemy.sql.elements', 'sqlalchemy.sql.operators', 'sqlalchemy.sql.type_api', 'sqlalchemy.sql.annotation', 'sqlalchemy.sql.selectable', 'sqlalchemy.sql.functions', 'sqlalchemy.sql.schema', 'sqlalchemy.sql.ddl', 'sqlalchemy.event', 'sqlalchemy.event.api', 'sqlalchemy.event.base', 'sqlalchemy.event.attr', 'sqlalchemy.event.legacy', 'sqlalchemy.event.registry', 'sqlalchemy.util.topological', 'sqlalchemy.sql.sqltypes', 'sqlalchemy.processors', 'sqlalchemy.cprocessors', 'sqlalchemy.sql.util', 'sqlalchemy.sql.default_comparator', 'sqlalchemy.sql.naming', 'sqlalchemy.events', 'sqlalchemy.engine', 'sqlalchemy.engine.strategies', 'sqlalchemy.engine.base', 'sqlalchemy.engine.interfaces', 'sqlalchemy.sql.compiler', 'sqlalchemy.sql.crud', 'sqlalchemy.engine.util', 'sqlalchemy.cutils', 'sqlalchemy.interfaces', 'sqlalchemy.log', 'sqlalchemy.engine.threadlocal', 'sqlalchemy.engine.url', 'sqlalchemy.dialects', 'sqlalchemy.pool', 'sqlalchemy.pool.base', 'sqlalchemy.pool.dbapi_proxy', 'sqlalchemy.pool.impl', 'sqlalchemy.util.queue', 'sqlalchemy.engine.result', 'sqlalchemy.cresultproxy', 'sqlalchemy.types', 'sqlalchemy.engine.default', 'sqlalchemy.engine.reflection', 'sqlalchemy.orm', 'sqlalchemy.orm.exc', 'sqlalchemy.orm.mapper', 'sqlalchemy.orm.attributes', 'sqlalchemy.orm.collections', 'sqlalchemy.orm.base', 'sqlalchemy.orm.interfaces', 'sqlalchemy.orm.path_registry', 'sqlalchemy.orm.instrumentation', 'sqlalchemy.orm.state', 'sqlalchemy.orm.loading', 'sqlalchemy.orm.strategy_options', 'sqlalchemy.orm.util', 'sqlalchemy.orm.properties', 'sqlalchemy.orm.deprecated_interfaces', 'sqlalchemy.orm.descriptor_props', 'sqlalchemy.orm.query', 'sqlalchemy.orm.persistence', 'sqlalchemy.orm.evaluator', 'sqlalchemy.orm.sync', 'sqlalchemy.orm.relationships', 'sqlalchemy.orm.dependency', 'sqlalchemy.orm.unitofwork', 'sqlalchemy.orm.scoping', 'sqlalchemy.orm.session', 'sqlalchemy.orm.identity', 'sqlalchemy.orm.dynamic', 'sqlalchemy.orm.strategies', 'sqlalchemy.orm.events', 'sqlalchemy.ext', 'sqlalchemy.ext.baked', 'mlflow.store.db.base_sql_model', 'sqlalchemy.ext.declarative', 'sqlalchemy.ext.declarative.api', 'sqlalchemy.ext.declarative.base', 'sqlalchemy.ext.declarative.clsregistry', 'mlflow.utils.mlflow_tags', 'mlflow.store.tracking.rest_store', 'mlflow.tracking._tracking_service.registry', 'mlflow.utils.databricks_utils', 'databricks_cli', 'databricks_cli.configure', 'databricks_cli.configure.provider', 'databricks_cli.utils', 'click', 'click.core', 'click._compat', 'click._unicodefun', 'click.exceptions', 'click.utils', 'click.globals', 'click.formatting', 'click.parser', 'click.termui', 'click.types', 'click.decorators', 'databricks_cli.click_types', 'mlflow.utils._spark_utils', 'mlflow.tracking._tracking_service.client', 'mlflow.store.artifact.artifact_repository_registry', 'mlflow.store.artifact.azure_blob_artifact_repo', 'mlflow.store.artifact.dbfs_artifact_repo', 'mlflow.store.artifact.databricks_artifact_repo', 'azure', 'azure.core', 'azure.core._version', 'azure.core._pipeline_client', 'azure.core.configuration', 'azure.core.pipeline', 'azure.core.pipeline._base', 'azure.core.pipeline.policies', 'azure.core.pipeline.policies._base', 'azure.core.pipeline.policies._authentication', 'azure.core.exceptions', 'azure.core.pipeline.policies._custom_hook', 'azure.core.pipeline.policies._redirect', 'azure.core.pipeline.policies._retry', 'azure.core.pipeline.policies._utils', 'azure.core.pipeline.policies._distributed_tracing', 'azure.core.settings', 'azure.core.tracing', 'azure.core.tracing._abstract_span', 'azure.core.pipeline.policies._universal', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'azure.core.pipeline.policies._base_async', 'azure.core.pipeline.policies._authentication_async', 'azure.core.pipeline.policies._redirect_async', 'azure.core.pipeline.policies._retry_async', 'azure.core.pipeline._tools', 'azure.core.pipeline._base_async', 'azure.core.pipeline._tools_async', 'azure.core.pipeline.transport', 'azure.core.pipeline.transport._base', 'six.moves.http_client', 'azure.core.pipeline.transport._requests_basic', 'azure.core.pipeline.transport._base_async', 'azure.core.pipeline.transport._requests_asyncio', 'azure.core.pipeline.transport._base_requests_async', 'azure.core._match_conditions', 'azure.core._pipeline_client_async', 'azure.storage', 'azure.storage.blob', 'azure.storage.blob._version', 'azure.storage.blob._blob_client', 'azure.core.tracing.decorator', 'azure.core.tracing.common', 'azure.storage.blob._shared', 'azure.storage.blob._shared.base_client', 'azure.storage.blob._shared.constants', 'azure.storage.blob._generated', 'azure.storage.blob._generated._azure_blob_storage', 'msrest', 'msrest.version', 'msrest.configuration', 'msrest.pipeline', 'msrest.pipeline.async_abc', 'msrest.universal_http', 'msrest.exceptions', 'msrest.universal_http.async_abc', 'msrest.universal_http.requests', 'oauthlib', 'oauthlib.oauth2', 'oauthlib.oauth2.rfc6749', 'oauthlib.oauth2.rfc6749.endpoints', 'oauthlib.oauth2.rfc6749.endpoints.authorization', 'oauthlib.common', 'oauthlib.oauth2.rfc6749.utils', 'oauthlib.oauth2.rfc6749.endpoints.base', 'oauthlib.oauth2.rfc6749.errors', 'oauthlib.oauth2.rfc6749.endpoints.introspect', 'oauthlib.oauth2.rfc6749.endpoints.metadata', 'oauthlib.oauth2.rfc6749.endpoints.token', 'oauthlib.oauth2.rfc6749.endpoints.revocation', 'oauthlib.oauth2.rfc6749.grant_types', 'oauthlib.oauth2.rfc6749.grant_types.authorization_code', 'oauthlib.oauth2.rfc6749.grant_types.base', 'oauthlib.uri_validate', 'oauthlib.oauth2.rfc6749.request_validator', 'oauthlib.oauth2.rfc6749.grant_types.implicit', 'oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials', 'oauthlib.oauth2.rfc6749.grant_types.client_credentials', 'oauthlib.oauth2.rfc6749.grant_types.refresh_token', 'oauthlib.oauth2.rfc6749.endpoints.resource', 'oauthlib.oauth2.rfc6749.endpoints.pre_configured', 'oauthlib.oauth2.rfc6749.tokens', 'oauthlib.oauth2.rfc6749.clients', 'oauthlib.oauth2.rfc6749.clients.base', 'oauthlib.oauth2.rfc6749.parameters', 'oauthlib.signals', 'blinker', 'blinker.base', 'blinker._utilities', 'blinker._saferef', 'oauthlib.oauth2.rfc6749.clients.web_application', 'oauthlib.oauth2.rfc6749.clients.mobile_application', 'oauthlib.oauth2.rfc6749.clients.legacy_application', 'oauthlib.oauth2.rfc6749.clients.backend_application', 'oauthlib.oauth2.rfc6749.clients.service_application', 'msrest.pipeline.universal', 'msrest.http_logger', 'msrest.service_client', 'msrest.authentication', 'requests_oauthlib', 'requests_oauthlib.oauth1_auth', 'oauthlib.oauth1', 'oauthlib.oauth1.rfc5849', 'oauthlib.oauth1.rfc5849.parameters', 'oauthlib.oauth1.rfc5849.utils', 'oauthlib.oauth1.rfc5849.signature', 'oauthlib.oauth1.rfc5849.request_validator', 'oauthlib.oauth1.rfc5849.endpoints', 'oauthlib.oauth1.rfc5849.endpoints.base', 'oauthlib.oauth1.rfc5849.errors', 'oauthlib.oauth1.rfc5849.endpoints.request_token', 'oauthlib.oauth1.rfc5849.endpoints.authorization', 'oauthlib.oauth1.rfc5849.endpoints.access_token', 'oauthlib.oauth1.rfc5849.endpoints.resource', 'oauthlib.oauth1.rfc5849.endpoints.signature_only', 'oauthlib.oauth1.rfc5849.endpoints.pre_configured', 'requests_oauthlib.oauth1_session', 'requests_oauthlib.oauth2_auth', 'requests_oauthlib.oauth2_session', 'msrest.pipeline.requests', 'msrest.serialization', 'isodate', 'isodate.isodates', 'isodate.isostrf', 'isodate.duration', 'isodate.isotzinfo', 'isodate.isoerror', 'isodate.tzinfo', 'isodate.isotime', 'isodate.isodatetime', 'isodate.isoduration', 'azure.storage.blob._generated._configuration', 'azure.storage.blob._generated.version', 'azure.storage.blob._generated.operations', 'azure.storage.blob._generated.operations._service_operations', 'azure.storage.blob._generated.models', 'azure.storage.blob._generated.models._models_py3', 'azure.storage.blob._generated.models._azure_blob_storage_enums', 'azure.storage.blob._generated.operations._container_operations', 'azure.storage.blob._generated.operations._directory_operations', 'azure.storage.blob._generated.operations._blob_operations', 'azure.storage.blob._generated.operations._page_blob_operations', 'azure.storage.blob._generated.operations._append_blob_operations', 'azure.storage.blob._generated.operations._block_blob_operations', 'azure.storage.blob._shared.models', 'azure.storage.blob._shared.authentication', 'azure.storage.blob._shared.shared_access_signature', 'azure.storage.blob._shared.parser', 'azure.storage.blob._shared.policies', 'wsgiref', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'azure.storage.blob._shared.response_handlers', 'azure.storage.blob._shared.encryption', 'cryptography', 'cryptography.__about__', 'cryptography.hazmat', 'cryptography.hazmat.backends', 'cryptography.hazmat.primitives', 'cryptography.hazmat.primitives.ciphers', 'cryptography.hazmat.primitives.ciphers.base', 'cryptography.utils', 'cryptography.exceptions', 'cryptography.hazmat.backends.interfaces', 'cryptography.hazmat.primitives.ciphers.modes', 'cryptography.hazmat.primitives.ciphers.algorithms', 'cryptography.hazmat.primitives.padding', 'cryptography.hazmat.bindings', '_padding.lib', '_padding', 'cryptography.hazmat.bindings._padding', 'azure.storage.blob._shared.uploads', 'azure.storage.blob._shared.request_handlers', 'azure.storage.blob._serialize', 'azure.storage.blob._models', 'azure.core.paging', 'azure.storage.blob._deserialize', 'azure.storage.blob._upload_helpers', 'azure.storage.blob._download', 'azure.storage.blob._lease', 'azure.storage.blob._container_client', 'azure.storage.blob._blob_service_client', 'azure.storage.blob._shared_access_signature', 'mlflow.protos.databricks_artifacts_pb2', 'mlflow.store.artifact.local_artifact_repo', 'distutils.dir_util', 'mlflow.store.artifact.ftp_artifact_repo', 'ftplib', 'mlflow.store.artifact.gcs_artifact_repo', 'mlflow.store.artifact.hdfs_artifact_repo', 'mlflow.store.artifact.models_artifact_repo', 'mlflow.store.artifact.runs_artifact_repo', 'mlflow.store.artifact.s3_artifact_repo', 'mlflow.data', 'mlflow.utils.process', 'mlflow.store.artifact.sftp_artifact_repo', 'mlflow.tracking.fluent', 'mlflow.tracking.artifact_utils', 'mlflow.tracking.context', 'mlflow.tracking.context.registry', 'mlflow.tracking.context.default_context', 'mlflow.tracking.context.abstract_context', 'mlflow.tracking.context.git_context', 'mlflow.tracking.context.databricks_notebook_context', 'mlflow.tracking.context.databricks_job_context', 'mlflow.tracking.context.databricks_cluster_context', 'mlflow.tracking._model_registry.fluent', 'mlflow.projects', 'docker', 'docker.api', 'docker.api.client', 'websocket', 'websocket._abnf', 'websocket._exceptions', 'websocket._utils', 'websocket._app', 'websocket._core', 'websocket._handshake', 'websocket._cookiejar', 'websocket._http', 'websocket._logging', 'websocket._socket', 'websocket._ssl_compat', 'websocket._url', 'docker.api.build', 'docker.auth', 'docker.credentials', 'docker.credentials.store', 'docker.credentials.constants', 'docker.credentials.errors', 'docker.credentials.utils', 'docker.errors', 'docker.utils', 'docker.utils.build', 'docker.utils.fnmatch', 'docker.constants', 'docker.version', 'docker.utils.decorators', 'docker.utils.utils', 'docker.tls', 'docker.transport', 'docker.transport.unixconn', 'docker.transport.basehttpadapter', 'docker.transport.ssladapter', 'docker.utils.config', 'docker.api.config', 'docker.api.container', 'docker.types', 'docker.types.containers', 'docker.types.base', 'docker.types.healthcheck', 'docker.types.daemon', 'docker.types.networks', 'docker.types.services', 'docker.types.swarm', 'docker.api.daemon', 'docker.api.exec_api', 'docker.api.image', 'docker.api.network', 'docker.api.plugin', 'docker.api.secret', 'docker.api.service', 'docker.api.swarm', 'docker.api.volume', 'docker.utils.socket', 'docker.utils.json_stream', 'docker.utils.proxy', 'docker.client', 'docker.models', 'docker.models.configs', 'docker.models.resource', 'docker.models.containers', 'docker.models.images', 'docker.models.networks', 'docker.models.nodes', 'docker.models.plugins', 'docker.models.secrets', 'docker.models.services', 'docker.models.swarm', 'docker.models.volumes', 'docker.context', 'docker.context.context', 'docker.context.config', 'docker.context.api', 'mlflow.projects.databricks', 'mlflow.projects.submitted_run', 'mlflow.projects.utils', 'mlflow.projects._project_spec', 'mlflow.projects.backend', 'mlflow.projects.backend.abstract_backend', 'mlflow.projects.backend.loader', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'pytorch_modeler', 'torchvision', 'torchvision.extension', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.ops.new_empty_tensor', 'torchvision.ops.deform_conv', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops._register_onnx_ops', 'torch.onnx.symbolic_helper', 'torch.onnx.utils', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset12', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.models.quantization', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'torchvision.datasets.utils', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.transforms.functional_pil', 'torchvision.transforms.functional_tensor', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html.parser', '_markupbase', 'torchvision.datasets.voc', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'torchvision.io', 'torchvision.io._video_opt', 'torchvision.io.video', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.version', 'preprocessing', 'pytorch_model', 'PANNs_utils', 'PANNs_utils.models', 'torchlibrosa', 'torchlibrosa.stft', 'torchlibrosa.augmentation', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.utils.multiclass', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.utils._random', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'zipfile', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'torch.utils.tensorboard', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'torch.utils.tensorboard.writer', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.event_pb2', 'google.protobuf', 'pkg_resources', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'google.protobuf.internal', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.descriptor', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins', 'tensorboard.plugins.projector', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorboard.plugins.projector.metadata', 'tensorboard.plugins.projector.projector_config_pb2', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'absl', 'absl.flags', 'absl.flags._argument_parser', 'csv', '_csv', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'absl.flags._validators', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary.writer', 'tensorboard.summary.writer.event_file_writer', 'tensorboard.summary.writer.record_writer', 'torch.utils.tensorboard._convert_np', 'torch.utils.tensorboard._embedding', 'torch.utils.tensorboard._utils', 'torch.utils.tensorboard._onnx_graph', 'torch.utils.tensorboard._pytorch_graph', 'torch.utils.tensorboard._proto_graph', 'torch.utils.tensorboard.summary', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'mlflow', 'mlflow.version', 'mlflow.utils', 'mlflow.utils.annotations', 'mlflow.utils.logging_utils', 'logging.config', 'socketserver', 'mlflow.tracking', 'mlflow.tracking.client', 'mlflow.entities', 'mlflow.entities.experiment', 'mlflow.entities._mlflow_object', 'mlflow.entities.experiment_tag', 'mlflow.protos', 'mlflow.protos.service_pb2', 'google.protobuf.service', 'google.protobuf.service_reflection', 'mlflow.protos.scalapb', 'mlflow.protos.scalapb.scalapb_pb2', 'google.protobuf.descriptor_pb2', 'mlflow.protos.databricks_pb2', 'mlflow.entities.file_info', 'mlflow.entities.lifecycle_stage', 'mlflow.entities.view_type', 'mlflow.exceptions', 'mlflow.entities.metric', 'mlflow.entities.param', 'mlflow.entities.run', 'mlflow.entities.run_data', 'mlflow.entities.run_tag', 'mlflow.entities.run_info', 'mlflow.entities.run_status', 'mlflow.entities.source_type', 'mlflow.entities.model_registry', 'mlflow.entities.model_registry.registered_model', 'mlflow.entities.model_registry.model_version', 'mlflow.entities.model_registry._model_registry_entity', 'mlflow.entities.model_registry.model_version_tag', 'mlflow.protos.model_registry_pb2', 'mlflow.entities.model_registry.model_version_status', 'mlflow.entities.model_registry.registered_model_tag', 'mlflow.entities.model_registry.model_version_stages', 'mlflow.store', 'mlflow.store.tracking', 'mlflow.store.tracking.abstract_store', 'mlflow.store.entities', 'mlflow.store.entities.paged_list', 'mlflow.store.artifact', 'mlflow.store.artifact.artifact_repo', 'mlflow.utils.validation', 'mlflow.store.db', 'mlflow.store.db.db_types', 'mlflow.utils.string_utils', 'mlflow.store.model_registry', 'mlflow.tracking._model_registry', 'mlflow.tracking._model_registry.client', 'mlflow.tracking._model_registry.utils', 'mlflow.store.model_registry.rest_store', 'mlflow.store.model_registry.abstract_store', 'mlflow.utils.proto_json_utils', 'google.protobuf.json_format', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'mlflow.types', 'mlflow.types.schema', 'mlflow.utils.rest_utils', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'brotli', 'brotli.brotli', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'urllib3.contrib.socks', 'socks', 'mlflow.tracking._model_registry.registry', 'mlflow.tracking.registry', 'entrypoints', 'mlflow.utils.uri', 'six.moves.urllib', 'mlflow.tracking._tracking_service', 'mlflow.tracking._tracking_service.utils', 'mlflow.store.tracking.file_store', 'mlflow.models', 'mlflow.models.model', 'mlflow.models.signature', 'mlflow.types.utils', 'mlflow.utils.file_utils', 'six.moves.urllib.request', 'six.moves.urllib.parse', 'mlflow.models.flavor_backend', 'mlflow.models.utils', 'mlflow.utils.env', 'mlflow.utils.search_utils', 'sqlparse', 'sqlparse.sql', 'sqlparse.tokens', 'sqlparse.compat', 'sqlparse.utils', 'sqlparse.cli', 'sqlparse.exceptions', 'sqlparse.engine', 'sqlparse.engine.grouping', 'sqlparse.engine.filter_stack', 'sqlparse.lexer', 'sqlparse.keywords', 'sqlparse.engine.statement_splitter', 'sqlparse.filters', 'sqlparse.filters.others', 'sqlparse.filters.output', 'sqlparse.filters.tokens', 'sqlparse.filters.reindent', 'sqlparse.filters.right_margin', 'sqlparse.filters.aligned_indent', 'sqlparse.formatter', 'mlflow.store.model_registry.dbmodels', 'mlflow.store.model_registry.dbmodels.models', 'sqlalchemy', 'sqlalchemy.util', 'sqlalchemy.util._collections', 'sqlalchemy.util.compat', 'sqlalchemy.util.deprecations', 'sqlalchemy.util.langhelpers', 'sqlalchemy.exc', 'sqlalchemy.inspection', 'sqlalchemy.schema', 'sqlalchemy.sql', 'sqlalchemy.sql.expression', 'sqlalchemy.sql.base', 'sqlalchemy.sql.visitors', 'sqlalchemy.sql.dml', 'sqlalchemy.sql.elements', 'sqlalchemy.sql.operators', 'sqlalchemy.sql.type_api', 'sqlalchemy.sql.annotation', 'sqlalchemy.sql.selectable', 'sqlalchemy.sql.functions', 'sqlalchemy.sql.schema', 'sqlalchemy.sql.ddl', 'sqlalchemy.event', 'sqlalchemy.event.api', 'sqlalchemy.event.base', 'sqlalchemy.event.attr', 'sqlalchemy.event.legacy', 'sqlalchemy.event.registry', 'sqlalchemy.util.topological', 'sqlalchemy.sql.sqltypes', 'sqlalchemy.processors', 'sqlalchemy.cprocessors', 'sqlalchemy.sql.util', 'sqlalchemy.sql.default_comparator', 'sqlalchemy.sql.naming', 'sqlalchemy.events', 'sqlalchemy.engine', 'sqlalchemy.engine.strategies', 'sqlalchemy.engine.base', 'sqlalchemy.engine.interfaces', 'sqlalchemy.sql.compiler', 'sqlalchemy.sql.crud', 'sqlalchemy.engine.util', 'sqlalchemy.cutils', 'sqlalchemy.interfaces', 'sqlalchemy.log', 'sqlalchemy.engine.threadlocal', 'sqlalchemy.engine.url', 'sqlalchemy.dialects', 'sqlalchemy.pool', 'sqlalchemy.pool.base', 'sqlalchemy.pool.dbapi_proxy', 'sqlalchemy.pool.impl', 'sqlalchemy.util.queue', 'sqlalchemy.engine.result', 'sqlalchemy.cresultproxy', 'sqlalchemy.types', 'sqlalchemy.engine.default', 'sqlalchemy.engine.reflection', 'sqlalchemy.orm', 'sqlalchemy.orm.exc', 'sqlalchemy.orm.mapper', 'sqlalchemy.orm.attributes', 'sqlalchemy.orm.collections', 'sqlalchemy.orm.base', 'sqlalchemy.orm.interfaces', 'sqlalchemy.orm.path_registry', 'sqlalchemy.orm.instrumentation', 'sqlalchemy.orm.state', 'sqlalchemy.orm.loading', 'sqlalchemy.orm.strategy_options', 'sqlalchemy.orm.util', 'sqlalchemy.orm.properties', 'sqlalchemy.orm.deprecated_interfaces', 'sqlalchemy.orm.descriptor_props', 'sqlalchemy.orm.query', 'sqlalchemy.orm.persistence', 'sqlalchemy.orm.evaluator', 'sqlalchemy.orm.sync', 'sqlalchemy.orm.relationships', 'sqlalchemy.orm.dependency', 'sqlalchemy.orm.unitofwork', 'sqlalchemy.orm.scoping', 'sqlalchemy.orm.session', 'sqlalchemy.orm.identity', 'sqlalchemy.orm.dynamic', 'sqlalchemy.orm.strategies', 'sqlalchemy.orm.events', 'sqlalchemy.ext', 'sqlalchemy.ext.baked', 'mlflow.store.db.base_sql_model', 'sqlalchemy.ext.declarative', 'sqlalchemy.ext.declarative.api', 'sqlalchemy.ext.declarative.base', 'sqlalchemy.ext.declarative.clsregistry', 'mlflow.utils.mlflow_tags', 'mlflow.store.tracking.rest_store', 'mlflow.tracking._tracking_service.registry', 'mlflow.utils.databricks_utils', 'databricks_cli', 'databricks_cli.configure', 'databricks_cli.configure.provider', 'databricks_cli.utils', 'click', 'click.core', 'click._compat', 'click._unicodefun', 'click.exceptions', 'click.utils', 'click.globals', 'click.formatting', 'click.parser', 'click.termui', 'click.types', 'click.decorators', 'databricks_cli.click_types', 'mlflow.utils._spark_utils', 'mlflow.tracking._tracking_service.client', 'mlflow.store.artifact.artifact_repository_registry', 'mlflow.store.artifact.azure_blob_artifact_repo', 'mlflow.store.artifact.dbfs_artifact_repo', 'mlflow.store.artifact.databricks_artifact_repo', 'azure', 'azure.core', 'azure.core._version', 'azure.core._pipeline_client', 'azure.core.configuration', 'azure.core.pipeline', 'azure.core.pipeline._base', 'azure.core.pipeline.policies', 'azure.core.pipeline.policies._base', 'azure.core.pipeline.policies._authentication', 'azure.core.exceptions', 'azure.core.pipeline.policies._custom_hook', 'azure.core.pipeline.policies._redirect', 'azure.core.pipeline.policies._retry', 'azure.core.pipeline.policies._utils', 'azure.core.pipeline.policies._distributed_tracing', 'azure.core.settings', 'azure.core.tracing', 'azure.core.tracing._abstract_span', 'azure.core.pipeline.policies._universal', 'xml.etree', 'xml.etree.ElementTree', 'xml.etree.ElementPath', '_elementtree', 'azure.core.pipeline.policies._base_async', 'azure.core.pipeline.policies._authentication_async', 'azure.core.pipeline.policies._redirect_async', 'azure.core.pipeline.policies._retry_async', 'azure.core.pipeline._tools', 'azure.core.pipeline._base_async', 'azure.core.pipeline._tools_async', 'azure.core.pipeline.transport', 'azure.core.pipeline.transport._base', 'six.moves.http_client', 'azure.core.pipeline.transport._requests_basic', 'azure.core.pipeline.transport._base_async', 'azure.core.pipeline.transport._requests_asyncio', 'azure.core.pipeline.transport._base_requests_async', 'azure.core._match_conditions', 'azure.core._pipeline_client_async', 'azure.storage', 'azure.storage.blob', 'azure.storage.blob._version', 'azure.storage.blob._blob_client', 'azure.core.tracing.decorator', 'azure.core.tracing.common', 'azure.storage.blob._shared', 'azure.storage.blob._shared.base_client', 'azure.storage.blob._shared.constants', 'azure.storage.blob._generated', 'azure.storage.blob._generated._azure_blob_storage', 'msrest', 'msrest.version', 'msrest.configuration', 'msrest.pipeline', 'msrest.pipeline.async_abc', 'msrest.universal_http', 'msrest.exceptions', 'msrest.universal_http.async_abc', 'msrest.universal_http.requests', 'oauthlib', 'oauthlib.oauth2', 'oauthlib.oauth2.rfc6749', 'oauthlib.oauth2.rfc6749.endpoints', 'oauthlib.oauth2.rfc6749.endpoints.authorization', 'oauthlib.common', 'oauthlib.oauth2.rfc6749.utils', 'oauthlib.oauth2.rfc6749.endpoints.base', 'oauthlib.oauth2.rfc6749.errors', 'oauthlib.oauth2.rfc6749.endpoints.introspect', 'oauthlib.oauth2.rfc6749.endpoints.metadata', 'oauthlib.oauth2.rfc6749.endpoints.token', 'oauthlib.oauth2.rfc6749.endpoints.revocation', 'oauthlib.oauth2.rfc6749.grant_types', 'oauthlib.oauth2.rfc6749.grant_types.authorization_code', 'oauthlib.oauth2.rfc6749.grant_types.base', 'oauthlib.uri_validate', 'oauthlib.oauth2.rfc6749.request_validator', 'oauthlib.oauth2.rfc6749.grant_types.implicit', 'oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials', 'oauthlib.oauth2.rfc6749.grant_types.client_credentials', 'oauthlib.oauth2.rfc6749.grant_types.refresh_token', 'oauthlib.oauth2.rfc6749.endpoints.resource', 'oauthlib.oauth2.rfc6749.endpoints.pre_configured', 'oauthlib.oauth2.rfc6749.tokens', 'oauthlib.oauth2.rfc6749.clients', 'oauthlib.oauth2.rfc6749.clients.base', 'oauthlib.oauth2.rfc6749.parameters', 'oauthlib.signals', 'blinker', 'blinker.base', 'blinker._utilities', 'blinker._saferef', 'oauthlib.oauth2.rfc6749.clients.web_application', 'oauthlib.oauth2.rfc6749.clients.mobile_application', 'oauthlib.oauth2.rfc6749.clients.legacy_application', 'oauthlib.oauth2.rfc6749.clients.backend_application', 'oauthlib.oauth2.rfc6749.clients.service_application', 'msrest.pipeline.universal', 'msrest.http_logger', 'msrest.service_client', 'msrest.authentication', 'requests_oauthlib', 'requests_oauthlib.oauth1_auth', 'oauthlib.oauth1', 'oauthlib.oauth1.rfc5849', 'oauthlib.oauth1.rfc5849.parameters', 'oauthlib.oauth1.rfc5849.utils', 'oauthlib.oauth1.rfc5849.signature', 'oauthlib.oauth1.rfc5849.request_validator', 'oauthlib.oauth1.rfc5849.endpoints', 'oauthlib.oauth1.rfc5849.endpoints.base', 'oauthlib.oauth1.rfc5849.errors', 'oauthlib.oauth1.rfc5849.endpoints.request_token', 'oauthlib.oauth1.rfc5849.endpoints.authorization', 'oauthlib.oauth1.rfc5849.endpoints.access_token', 'oauthlib.oauth1.rfc5849.endpoints.resource', 'oauthlib.oauth1.rfc5849.endpoints.signature_only', 'oauthlib.oauth1.rfc5849.endpoints.pre_configured', 'requests_oauthlib.oauth1_session', 'requests_oauthlib.oauth2_auth', 'requests_oauthlib.oauth2_session', 'msrest.pipeline.requests', 'msrest.serialization', 'isodate', 'isodate.isodates', 'isodate.isostrf', 'isodate.duration', 'isodate.isotzinfo', 'isodate.isoerror', 'isodate.tzinfo', 'isodate.isotime', 'isodate.isodatetime', 'isodate.isoduration', 'azure.storage.blob._generated._configuration', 'azure.storage.blob._generated.version', 'azure.storage.blob._generated.operations', 'azure.storage.blob._generated.operations._service_operations', 'azure.storage.blob._generated.models', 'azure.storage.blob._generated.models._models_py3', 'azure.storage.blob._generated.models._azure_blob_storage_enums', 'azure.storage.blob._generated.operations._container_operations', 'azure.storage.blob._generated.operations._directory_operations', 'azure.storage.blob._generated.operations._blob_operations', 'azure.storage.blob._generated.operations._page_blob_operations', 'azure.storage.blob._generated.operations._append_blob_operations', 'azure.storage.blob._generated.operations._block_blob_operations', 'azure.storage.blob._shared.models', 'azure.storage.blob._shared.authentication', 'azure.storage.blob._shared.shared_access_signature', 'azure.storage.blob._shared.parser', 'azure.storage.blob._shared.policies', 'wsgiref', 'wsgiref.handlers', 'wsgiref.util', 'wsgiref.headers', 'azure.storage.blob._shared.response_handlers', 'azure.storage.blob._shared.encryption', 'cryptography', 'cryptography.__about__', 'cryptography.hazmat', 'cryptography.hazmat.backends', 'cryptography.hazmat.primitives', 'cryptography.hazmat.primitives.ciphers', 'cryptography.hazmat.primitives.ciphers.base', 'cryptography.utils', 'cryptography.exceptions', 'cryptography.hazmat.backends.interfaces', 'cryptography.hazmat.primitives.ciphers.modes', 'cryptography.hazmat.primitives.ciphers.algorithms', 'cryptography.hazmat.primitives.padding', 'cryptography.hazmat.bindings', '_padding.lib', '_padding', 'cryptography.hazmat.bindings._padding', 'azure.storage.blob._shared.uploads', 'azure.storage.blob._shared.request_handlers', 'azure.storage.blob._serialize', 'azure.storage.blob._models', 'azure.core.paging', 'azure.storage.blob._deserialize', 'azure.storage.blob._upload_helpers', 'azure.storage.blob._download', 'azure.storage.blob._lease', 'azure.storage.blob._container_client', 'azure.storage.blob._blob_service_client', 'azure.storage.blob._shared_access_signature', 'mlflow.protos.databricks_artifacts_pb2', 'mlflow.store.artifact.local_artifact_repo', 'distutils.dir_util', 'mlflow.store.artifact.ftp_artifact_repo', 'ftplib', 'mlflow.store.artifact.gcs_artifact_repo', 'mlflow.store.artifact.hdfs_artifact_repo', 'mlflow.store.artifact.models_artifact_repo', 'mlflow.store.artifact.runs_artifact_repo', 'mlflow.store.artifact.s3_artifact_repo', 'mlflow.data', 'mlflow.utils.process', 'mlflow.store.artifact.sftp_artifact_repo', 'mlflow.tracking.fluent', 'mlflow.tracking.artifact_utils', 'mlflow.tracking.context', 'mlflow.tracking.context.registry', 'mlflow.tracking.context.default_context', 'mlflow.tracking.context.abstract_context', 'mlflow.tracking.context.git_context', 'mlflow.tracking.context.databricks_notebook_context', 'mlflow.tracking.context.databricks_job_context', 'mlflow.tracking.context.databricks_cluster_context', 'mlflow.tracking._model_registry.fluent', 'mlflow.projects', 'docker', 'docker.api', 'docker.api.client', 'websocket', 'websocket._abnf', 'websocket._exceptions', 'websocket._utils', 'websocket._app', 'websocket._core', 'websocket._handshake', 'websocket._cookiejar', 'websocket._http', 'websocket._logging', 'websocket._socket', 'websocket._ssl_compat', 'websocket._url', 'docker.api.build', 'docker.auth', 'docker.credentials', 'docker.credentials.store', 'docker.credentials.constants', 'docker.credentials.errors', 'docker.credentials.utils', 'docker.errors', 'docker.utils', 'docker.utils.build', 'docker.utils.fnmatch', 'docker.constants', 'docker.version', 'docker.utils.decorators', 'docker.utils.utils', 'docker.tls', 'docker.transport', 'docker.transport.unixconn', 'docker.transport.basehttpadapter', 'docker.transport.ssladapter', 'docker.utils.config', 'docker.api.config', 'docker.api.container', 'docker.types', 'docker.types.containers', 'docker.types.base', 'docker.types.healthcheck', 'docker.types.daemon', 'docker.types.networks', 'docker.types.services', 'docker.types.swarm', 'docker.api.daemon', 'docker.api.exec_api', 'docker.api.image', 'docker.api.network', 'docker.api.plugin', 'docker.api.secret', 'docker.api.service', 'docker.api.swarm', 'docker.api.volume', 'docker.utils.socket', 'docker.utils.json_stream', 'docker.utils.proxy', 'docker.client', 'docker.models', 'docker.models.configs', 'docker.models.resource', 'docker.models.containers', 'docker.models.images', 'docker.models.networks', 'docker.models.nodes', 'docker.models.plugins', 'docker.models.secrets', 'docker.models.services', 'docker.models.swarm', 'docker.models.volumes', 'docker.context', 'docker.context.context', 'docker.context.config', 'docker.context.api', 'mlflow.projects.databricks', 'mlflow.projects.submitted_run', 'mlflow.projects.utils', 'mlflow.projects._project_spec', 'mlflow.projects.backend', 'mlflow.projects.backend.abstract_backend', 'mlflow.projects.backend.loader', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'pytorch_modeler', 'torchvision', 'torchvision.extension', 'torchvision.models', 'torchvision.models.alexnet', 'torchvision.models.utils', 'torchvision.models.resnet', 'torchvision.models.vgg', 'torchvision.models.squeezenet', 'torchvision.models.inception', 'torchvision.models.densenet', 'torch.utils.checkpoint', 'torchvision.models.googlenet', 'torchvision.models.mobilenet', 'torchvision.models.mnasnet', 'torchvision.models.shufflenetv2', 'torchvision.models.segmentation', 'torchvision.models.segmentation.segmentation', 'torchvision.models._utils', 'torchvision.models.segmentation.deeplabv3', 'torchvision.models.segmentation._utils', 'torchvision.models.segmentation.fcn', 'torchvision.models.detection', 'torchvision.models.detection.faster_rcnn', 'torchvision.ops', 'torchvision.ops.boxes', 'torchvision.ops.new_empty_tensor', 'torchvision.ops.deform_conv', 'torchvision.ops.roi_align', 'torchvision.ops._utils', 'torchvision.ops.roi_pool', 'torchvision.ops.ps_roi_align', 'torchvision.ops.ps_roi_pool', 'torchvision.ops.poolers', 'torchvision.ops.feature_pyramid_network', 'torchvision.ops._register_onnx_ops', 'torch.onnx.symbolic_helper', 'torch.onnx.utils', 'torch.onnx.symbolic_opset9', 'torch.onnx.symbolic_registry', 'torch.onnx.symbolic_opset7', 'torch.onnx.symbolic_opset8', 'torch.onnx.symbolic_opset10', 'torch.onnx.symbolic_opset11', 'torch.onnx.symbolic_opset12', 'torchvision.ops.misc', 'torchvision.models.detection.generalized_rcnn', 'torchvision.models.detection.rpn', 'torchvision.models.detection._utils', 'torchvision.models.detection.image_list', 'torchvision.models.detection.roi_heads', 'torchvision.models.detection.transform', 'torchvision.models.detection.backbone_utils', 'torchvision.models.detection.mask_rcnn', 'torchvision.models.detection.keypoint_rcnn', 'torchvision.models.video', 'torchvision.models.video.resnet', 'torchvision.models.quantization', 'torchvision.models.quantization.mobilenet', 'torchvision.models.quantization.utils', 'torchvision.models.quantization.resnet', 'torchvision.models.quantization.googlenet', 'torchvision.models.quantization.inception', 'torchvision.models.quantization.shufflenetv2', 'torchvision.datasets', 'torchvision.datasets.lsun', 'torchvision.datasets.vision', 'PIL', 'PIL._version', 'PIL.Image', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi', 'cffi.api', 'cffi.lock', 'cffi.error', 'cffi.model', 'torchvision.datasets.utils', 'torch.utils.model_zoo', 'torchvision.datasets.folder', 'torchvision.datasets.coco', 'torchvision.datasets.cifar', 'torchvision.datasets.stl10', 'torchvision.datasets.mnist', 'torchvision.datasets.svhn', 'torchvision.datasets.phototour', 'torchvision.datasets.fakedata', 'torchvision.transforms', 'torchvision.transforms.transforms', 'torchvision.transforms.functional', 'PIL.ImageOps', 'PIL.ImageEnhance', 'PIL.ImageFilter', 'PIL.ImageStat', 'torchvision.transforms.functional_pil', 'torchvision.transforms.functional_tensor', 'torchvision.datasets.semeion', 'torchvision.datasets.omniglot', 'torchvision.datasets.sbu', 'torchvision.datasets.flickr', 'html.parser', '_markupbase', 'torchvision.datasets.voc', 'torchvision.datasets.cityscapes', 'torchvision.datasets.imagenet', 'torchvision.datasets.caltech', 'torchvision.datasets.celeba', 'torchvision.datasets.sbd', 'torchvision.datasets.usps', 'torchvision.datasets.kinetics', 'torchvision.datasets.video_utils', 'torchvision.io', 'torchvision.io._video_opt', 'torchvision.io.video', 'torchvision.datasets.hmdb51', 'torchvision.datasets.ucf101', 'torchvision.utils', 'torchvision.version', 'preprocessing', 'pytorch_model', 'PANNs_utils', 'PANNs_utils.models', 'torchlibrosa', 'torchlibrosa.stft', 'torchlibrosa.augmentation', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[4:15] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:16] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:16] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/serialization.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 28
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:28]
DEBUG:parso.python.diff:parse_part from 1 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:28] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 28
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:28]
DEBUG:parso.python.diff:parse_part from 1 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 229; new: 229
DEBUG:parso.python.diff:-> code[equal] old[1:107] new[1:107]
DEBUG:parso.python.diff:copy old[1:106] new[1:106]
DEBUG:parso.python.diff:parse_part from 107 to 107 (to 107 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[108:108] new[108:108]
DEBUG:parso.python.diff:parse_part from 108 to 228 (to 228 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[109:115] new[109:115]
DEBUG:parso.python.diff:-> code[replace] old[116:116] new[116:116]
DEBUG:parso.python.diff:-> code[equal] old[117:229] new[117:229]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 29
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:29]
DEBUG:parso.python.diff:parse_part from 1 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 28
DEBUG:parso.python.diff:-> code[equal] old[1:27] new[1:27]
DEBUG:parso.python.diff:copy old[2:27] new[1:27]
DEBUG:parso.python.diff:-> code[replace] old[28:28] new[28:28]
DEBUG:parso.python.diff:parse_part from 28 to 28 (to 27 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 28; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:28] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/pytorch_utils.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 29
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:29]
DEBUG:parso.python.diff:parse_part from 1 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 29; new: 29
DEBUG:parso.python.diff:-> code[equal] old[1:28] new[1:28]
DEBUG:parso.python.diff:copy old[2:28] new[1:28]
DEBUG:parso.python.diff:-> code[replace] old[29:29] new[29:29]
DEBUG:parso.python.diff:parse_part from 29 to 29 (to 28 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:6]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:6] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[delete] old[1:1] new[1:0]
DEBUG:parso.python.diff:-> code[equal] old[2:2] new[1:1]
DEBUG:parso.python.diff:copy old[2:1] new[1:1]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/pytorch_model.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/serialization.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 22
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:22]
DEBUG:parso.python.diff:parse_part from 22 to 22 (to 21 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 22; new: 23
DEBUG:parso.python.diff:-> code[equal] old[1:21] new[1:21]
DEBUG:parso.python.diff:copy old[4:21] new[1:21]
DEBUG:parso.python.diff:-> code[replace] old[22:22] new[22:23]
DEBUG:parso.python.diff:parse_part from 22 to 23 (to 22 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 23; new: 23
DEBUG:parso.python.diff:-> code[equal] old[1:22] new[1:22]
DEBUG:parso.python.diff:copy old[4:22] new[1:22]
DEBUG:parso.python.diff:-> code[replace] old[23:23] new[23:23]
DEBUG:parso.python.diff:parse_part from 23 to 23 (to 22 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 23; new: 23
DEBUG:parso.python.diff:-> code[equal] old[1:22] new[1:22]
DEBUG:parso.python.diff:copy old[4:22] new[1:22]
DEBUG:parso.python.diff:-> code[replace] old[23:23] new[23:23]
DEBUG:parso.python.diff:parse_part from 23 to 23 (to 22 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/common.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/numpy/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/collections/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torchsummary/torchsummary.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/common.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torchsummary/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torchsummary/torchsummary.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:3] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:5] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/collections/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/distributions.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/_continuous_distns.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/_discrete_distns.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/morestats.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/_binned_statistic.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/scipy/stats/_multivariate.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/_VariableFunctions.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/functional.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/os.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/os/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/posixpath.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/ntpath.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/macpath.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/os/path.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/types.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/abc.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/version.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/glob.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/tensor.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/ctypes/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_utils_internal.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 30; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[2:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:30] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 4
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:4] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torchsummary/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torchsummary/torchsummary.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[2:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:8]
DEBUG:parso.python.diff:parse_part from 4 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 36
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:36]
DEBUG:parso.python.diff:parse_part from 1 to 36 (to 35 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/display.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 36; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:36] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/feature/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/feature/spectral.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8c4c1a0f90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8c4c1a0f90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8c4d297a50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8c4d297a50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/spectrum.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
ERROR: :file_broken or not exists!! : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/train/normal_id_01_00000310.wav
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 8
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:8]
DEBUG:parso.python.diff:parse_part from 1 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/numpy/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
DEBUG:numba.byteflow:stack ['$8call_function.3']
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
DEBUG:numba.byteflow:stack ['$const12.4', '$sample_ratio14.5']
DEBUG:numba.byteflow:dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
DEBUG:numba.byteflow:stack ['$16binary_true_divide.6']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7']
DEBUG:numba.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8']
DEBUG:numba.byteflow:dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
DEBUG:numba.byteflow:dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
DEBUG:numba.byteflow:stack ['$20load_global.7', '$26binary_multiply.10']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
DEBUG:numba.byteflow:stack ['$28call_function.11']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
DEBUG:numba.byteflow:stack ['$const32.12']
DEBUG:numba.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
DEBUG:numba.byteflow:stack ['$const36.13']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
DEBUG:numba.byteflow:stack ['$const40.14']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
DEBUG:numba.byteflow:stack ['$const44.15']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
DEBUG:numba.byteflow:stack ['$const48.16']
DEBUG:numba.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
DEBUG:numba.byteflow:stack ['$const52.17']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
DEBUG:numba.byteflow:stack ['$const56.18']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
DEBUG:numba.byteflow:stack ['$interp_win60.19']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20']
DEBUG:numba.byteflow:dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
DEBUG:numba.byteflow:stack ['$62load_attr.20', '$const64.21']
DEBUG:numba.byteflow:dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
DEBUG:numba.byteflow:stack ['$66binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
DEBUG:numba.byteflow:stack ['$x70.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24']
DEBUG:numba.byteflow:dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
DEBUG:numba.byteflow:stack ['$72load_attr.24', '$const74.25']
DEBUG:numba.byteflow:dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
DEBUG:numba.byteflow:stack ['$76binary_subscr.26']
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
DEBUG:numba.byteflow:stack ['$y80.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.byteflow:stack ['$82load_attr.28', '$const84.29']
DEBUG:numba.byteflow:dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
DEBUG:numba.byteflow:stack ['$86binary_subscr.30']
DEBUG:numba.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
DEBUG:numba.byteflow:stack ['$y90.31']
DEBUG:numba.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32']
DEBUG:numba.byteflow:dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
DEBUG:numba.byteflow:stack ['$92load_attr.32', '$const94.33']
DEBUG:numba.byteflow:dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
DEBUG:numba.byteflow:stack ['$96binary_subscr.34']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0']
DEBUG:numba.byteflow:dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
DEBUG:numba.byteflow:stack ['$104load_global.0', '$n_out106.1']
DEBUG:numba.byteflow:dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
DEBUG:numba.byteflow:stack ['$108call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi112.0']
DEBUG:numba.byteflow:dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
DEBUG:numba.byteflow:stack ['$phi112.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
DEBUG:numba.byteflow:stack ['$phi116.0', '$phi116.1']
DEBUG:numba.byteflow:dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2']
DEBUG:numba.byteflow:dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
DEBUG:numba.byteflow:dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
DEBUG:numba.byteflow:stack ['$phi116.0', '$122call_function.4']
DEBUG:numba.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5']
DEBUG:numba.byteflow:dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6']
DEBUG:numba.byteflow:dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
DEBUG:numba.byteflow:dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
DEBUG:numba.byteflow:dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
DEBUG:numba.byteflow:stack ['$phi116.0', '$134binary_multiply.9']
DEBUG:numba.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10']
DEBUG:numba.byteflow:dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$frac138.10', '$num_table140.11']
DEBUG:numba.byteflow:dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
DEBUG:numba.byteflow:stack ['$phi116.0', '$142binary_multiply.12']
DEBUG:numba.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13']
DEBUG:numba.byteflow:dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
DEBUG:numba.byteflow:dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
DEBUG:numba.byteflow:stack ['$phi116.0', '$150call_function.15']
DEBUG:numba.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16']
DEBUG:numba.byteflow:dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
DEBUG:numba.byteflow:dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
DEBUG:numba.byteflow:stack ['$phi116.0', '$158binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0']
DEBUG:numba.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19']
DEBUG:numba.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20']
DEBUG:numba.byteflow:dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
DEBUG:numba.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
DEBUG:numba.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
DEBUG:numba.byteflow:dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
DEBUG:numba.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
DEBUG:numba.byteflow:dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
DEBUG:numba.byteflow:dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
DEBUG:numba.byteflow:dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
DEBUG:numba.byteflow:stack ['$phi116.0', '$180call_function.28']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$const478.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=184 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0']
DEBUG:numba.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1']
DEBUG:numba.byteflow:dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
DEBUG:numba.byteflow:dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
DEBUG:numba.byteflow:stack ['$phi184.0', '$190call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
DEBUG:numba.byteflow:stack ['$phi194.0', '$phi194.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi290.0']
DEBUG:numba.byteflow:dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi290.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$phi196.2']
DEBUG:numba.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1']
DEBUG:numba.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
DEBUG:numba.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
DEBUG:numba.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
DEBUG:numba.byteflow:dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
DEBUG:numba.byteflow:dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
DEBUG:numba.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
DEBUG:numba.byteflow:dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
DEBUG:numba.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
DEBUG:numba.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
DEBUG:numba.byteflow:dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
DEBUG:numba.byteflow:dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
DEBUG:numba.byteflow:dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
DEBUG:numba.byteflow:stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1']
DEBUG:numba.byteflow:dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$scale292.1', '$frac294.2']
DEBUG:numba.byteflow:dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
DEBUG:numba.byteflow:stack ['$phi292.0', '$296binary_subtract.3']
DEBUG:numba.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4']
DEBUG:numba.byteflow:dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$frac300.4', '$num_table302.5']
DEBUG:numba.byteflow:dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
DEBUG:numba.byteflow:stack ['$phi292.0', '$304binary_multiply.6']
DEBUG:numba.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7']
DEBUG:numba.byteflow:dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
DEBUG:numba.byteflow:dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
DEBUG:numba.byteflow:stack ['$phi292.0', '$312call_function.9']
DEBUG:numba.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10']
DEBUG:numba.byteflow:dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
DEBUG:numba.byteflow:dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
DEBUG:numba.byteflow:stack ['$phi292.0', '$320binary_subtract.12']
DEBUG:numba.byteflow:dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0']
DEBUG:numba.byteflow:dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13']
DEBUG:numba.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
DEBUG:numba.byteflow:dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
DEBUG:numba.byteflow:dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
DEBUG:numba.byteflow:dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
DEBUG:numba.byteflow:dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
DEBUG:numba.byteflow:dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
DEBUG:numba.byteflow:dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
DEBUG:numba.byteflow:dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
DEBUG:numba.byteflow:dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
DEBUG:numba.byteflow:dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
DEBUG:numba.byteflow:dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
DEBUG:numba.byteflow:stack ['$phi292.0', '$346call_function.24']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1']
DEBUG:numba.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2']
DEBUG:numba.byteflow:dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
DEBUG:numba.byteflow:dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
DEBUG:numba.byteflow:stack ['$phi234.0', '$phi234.1', '$240call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0']
DEBUG:numba.byteflow:dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1']
DEBUG:numba.byteflow:dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
DEBUG:numba.byteflow:dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.byteflow:stack ['$phi350.0', '$356call_function.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
DEBUG:numba.byteflow:stack ['$phi244.0', '$phi244.1', '$phi244.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
DEBUG:numba.byteflow:stack ['$phi360.0', '$phi360.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi286.0', '$phi286.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
DEBUG:numba.byteflow:dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
DEBUG:numba.byteflow:dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
DEBUG:numba.byteflow:dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
DEBUG:numba.byteflow:dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
DEBUG:numba.byteflow:dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
DEBUG:numba.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
DEBUG:numba.byteflow:dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
DEBUG:numba.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
DEBUG:numba.byteflow:dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
DEBUG:numba.byteflow:dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
DEBUG:numba.byteflow:dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
DEBUG:numba.byteflow:dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
DEBUG:numba.byteflow:dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
DEBUG:numba.byteflow:dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
DEBUG:numba.byteflow:stack ['$phi246.0', '$phi246.1', '$phi246.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi464.0']
DEBUG:numba.byteflow:dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi464.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$phi362.2']
DEBUG:numba.byteflow:dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1']
DEBUG:numba.byteflow:dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
DEBUG:numba.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
DEBUG:numba.byteflow:dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
DEBUG:numba.byteflow:dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
DEBUG:numba.byteflow:dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
DEBUG:numba.byteflow:dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
DEBUG:numba.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
DEBUG:numba.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
DEBUG:numba.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
DEBUG:numba.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
DEBUG:numba.byteflow:dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
DEBUG:numba.byteflow:dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
DEBUG:numba.byteflow:dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
DEBUG:numba.byteflow:dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
DEBUG:numba.byteflow:dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
DEBUG:numba.byteflow:dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
DEBUG:numba.byteflow:stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
DEBUG:numba.byteflow:stack ['$phi288.0', '$phi288.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1']
DEBUG:numba.byteflow:dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
DEBUG:numba.byteflow:dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0', '$470inplace_add.3']
DEBUG:numba.byteflow:dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
DEBUG:numba.byteflow:stack ['$phi466.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1']
DEBUG:numba.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2']
DEBUG:numba.byteflow:dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
DEBUG:numba.byteflow:dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
DEBUG:numba.byteflow:stack ['$phi400.0', '$phi400.1', '$406call_function.4']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
DEBUG:numba.byteflow:stack ['$phi410.0', '$phi410.1', '$phi410.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
DEBUG:numba.byteflow:stack: ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi458.0', '$phi458.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
DEBUG:numba.byteflow:stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
DEBUG:numba.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
DEBUG:numba.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
DEBUG:numba.byteflow:dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
DEBUG:numba.byteflow:dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
DEBUG:numba.byteflow:dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
DEBUG:numba.byteflow:dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
DEBUG:numba.byteflow:dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
DEBUG:numba.byteflow:dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
DEBUG:numba.byteflow:dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
DEBUG:numba.byteflow:dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
DEBUG:numba.byteflow:dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
DEBUG:numba.byteflow:dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
DEBUG:numba.byteflow:dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
DEBUG:numba.byteflow:dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
DEBUG:numba.byteflow:dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
DEBUG:numba.byteflow:dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
DEBUG:numba.byteflow:dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
DEBUG:numba.byteflow:dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
DEBUG:numba.byteflow:dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
DEBUG:numba.byteflow:stack ['$phi412.0', '$phi412.1', '$phi412.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
DEBUG:numba.byteflow:stack: ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
DEBUG:numba.byteflow:stack ['$phi460.0', '$phi460.1']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:pending: deque([State(pc_initial=360 nstack_initial=2)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
DEBUG:numba.byteflow:keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
DEBUG:numba.byteflow:block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
DEBUG:numba.byteflow:block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
DEBUG:numba.byteflow:block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
DEBUG:numba.byteflow:block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    $8call_function.3 = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$8call_function.3', '$const4.1', 'sample_ratio']
    scale = $8call_function.3                ['$8call_function.3', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    $16binary_true_divide.6 = $const12.4 / sample_ratio ['$16binary_true_divide.6', '$const12.4', 'sample_ratio']
    time_increment = $16binary_true_divide.6 ['$16binary_true_divide.6', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    $28call_function.11 = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', '$28call_function.11']
    index_step = $28call_function.11         ['$28call_function.11', 'index_step']
    $const32.12 = const(float, 0.0)          ['$const32.12']
    time_register = $const32.12              ['$const32.12', 'time_register']
    $const36.13 = const(int, 0)              ['$const36.13']
    n = $const36.13                          ['$const36.13', 'n']
    $const40.14 = const(float, 0.0)          ['$const40.14']
    frac = $const40.14                       ['$const40.14', 'frac']
    $const44.15 = const(float, 0.0)          ['$const44.15']
    index_frac = $const44.15                 ['$const44.15', 'index_frac']
    $const48.16 = const(int, 0)              ['$const48.16']
    offset = $const48.16                     ['$const48.16', 'offset']
    $const52.17 = const(float, 0.0)          ['$const52.17']
    eta = $const52.17                        ['$const52.17', 'eta']
    $const56.18 = const(float, 0.0)          ['$const56.18']
    weight = $const56.18                     ['$const56.18', 'weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    $66binary_subscr.22 = getitem(value=$62load_attr.20, index=$const64.21) ['$62load_attr.20', '$66binary_subscr.22', '$const64.21']
    nwin = $66binary_subscr.22               ['$66binary_subscr.22', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    $76binary_subscr.26 = getitem(value=$72load_attr.24, index=$const74.25) ['$72load_attr.24', '$76binary_subscr.26', '$const74.25']
    n_orig = $76binary_subscr.26             ['$76binary_subscr.26', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    $86binary_subscr.30 = getitem(value=$82load_attr.28, index=$const84.29) ['$82load_attr.28', '$86binary_subscr.30', '$const84.29']
    n_out = $86binary_subscr.30              ['$86binary_subscr.30', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    $96binary_subscr.34 = getitem(value=$92load_attr.32, index=$const94.33) ['$92load_attr.32', '$96binary_subscr.34', '$const94.33']
    n_channels = $96binary_subscr.34         ['$96binary_subscr.34', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    $122call_function.4 = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', '$122call_function.4', 'time_register']
    n = $122call_function.4                  ['$122call_function.4', 'n']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    $134binary_multiply.9 = scale * $132binary_subtract.8 ['$132binary_subtract.8', '$134binary_multiply.9', 'scale']
    frac = $134binary_multiply.9             ['$134binary_multiply.9', 'frac']
    $142binary_multiply.12 = frac * num_table ['$142binary_multiply.12', 'frac', 'num_table']
    index_frac = $142binary_multiply.12      ['$142binary_multiply.12', 'index_frac']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    $150call_function.15 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', '$150call_function.15', 'index_frac']
    offset = $150call_function.15            ['$150call_function.15', 'offset']
    $158binary_subtract.18 = index_frac - offset ['$158binary_subtract.18', 'index_frac', 'offset']
    eta = $158binary_subtract.18             ['$158binary_subtract.18', 'eta']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    $180call_function.28 = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', '$180call_function.28']
    i_max = $180call_function.28             ['$180call_function.28', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    $230binary_add.19 = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', '$230binary_add.19']
    weight = $230binary_add.19               ['$230binary_add.19', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    $304binary_multiply.6 = frac * num_table ['$304binary_multiply.6', 'frac', 'num_table']
    index_frac = $304binary_multiply.6       ['$304binary_multiply.6', 'index_frac']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    $312call_function.9 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', '$312call_function.9', 'index_frac']
    offset = $312call_function.9             ['$312call_function.9', 'offset']
    $320binary_subtract.12 = index_frac - offset ['$320binary_subtract.12', 'index_frac', 'offset']
    eta = $320binary_subtract.12             ['$320binary_subtract.12', 'eta']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    $346call_function.24 = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', '$346call_function.24']
    k_max = $346call_function.24             ['$346call_function.24', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    $396binary_add.19 = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', '$396binary_add.19']
    weight = $396binary_add.19               ['$396binary_add.19', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:8]
DEBUG:parso.python.diff:parse_part from 3 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/_split.py
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/feature/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/feature/spectral.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=415)
           2	LOAD_FAST(arg=1, lineno=415)
           4	LOAD_ATTR(arg=0, lineno=415)
           6	LOAD_CONST(arg=1, lineno=415)
           8	BINARY_SUBSCR(arg=None, lineno=415)
          10	STORE_FAST(arg=3, lineno=415)
          12	SETUP_LOOP(arg=66, lineno=416)
          14	LOAD_GLOBAL(arg=1, lineno=416)
          16	LOAD_FAST(arg=1, lineno=416)
          18	LOAD_ATTR(arg=0, lineno=416)
          20	LOAD_CONST(arg=2, lineno=416)
          22	BINARY_SUBSCR(arg=None, lineno=416)
          24	CALL_FUNCTION(arg=1, lineno=416)
          26	GET_ITER(arg=None, lineno=416)
>         28	FOR_ITER(arg=48, lineno=416)
          30	STORE_FAST(arg=4, lineno=416)
          32	LOAD_FAST(arg=4, lineno=417)
          34	LOAD_FAST(arg=2, lineno=417)
          36	BINARY_MULTIPLY(arg=None, lineno=417)
          38	STORE_FAST(arg=5, lineno=417)
          40	LOAD_FAST(arg=0, lineno=418)
          42	LOAD_FAST(arg=5, lineno=418)
          44	LOAD_FAST(arg=5, lineno=418)
          46	LOAD_FAST(arg=3, lineno=418)
          48	BINARY_ADD(arg=None, lineno=418)
          50	BUILD_SLICE(arg=2, lineno=418)
          52	DUP_TOP_TWO(arg=None, lineno=418)
          54	BINARY_SUBSCR(arg=None, lineno=418)
          56	LOAD_FAST(arg=1, lineno=418)
          58	LOAD_CONST(arg=0, lineno=418)
          60	LOAD_CONST(arg=0, lineno=418)
          62	BUILD_SLICE(arg=2, lineno=418)
          64	LOAD_FAST(arg=4, lineno=418)
          66	BUILD_TUPLE(arg=2, lineno=418)
          68	BINARY_SUBSCR(arg=None, lineno=418)
          70	INPLACE_ADD(arg=None, lineno=418)
          72	ROT_THREE(arg=None, lineno=418)
          74	STORE_SUBSCR(arg=None, lineno=418)
          76	JUMP_ABSOLUTE(arg=28, lineno=418)
>         78	POP_BLOCK(arg=None, lineno=418)
>         80	LOAD_CONST(arg=0, lineno=418)
          82	RETURN_VALUE(arg=None, lineno=418)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=415)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=415)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=415)
DEBUG:numba.byteflow:stack ['$ytmp2.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=415)
DEBUG:numba.byteflow:stack ['$4load_attr.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=415)
DEBUG:numba.byteflow:stack ['$4load_attr.1', '$const6.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=415)
DEBUG:numba.byteflow:stack ['$8binary_subscr.3']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=12, inst=SETUP_LOOP(arg=66, lineno=416)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=416)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$14load_global.0']
DEBUG:numba.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=0, lineno=416)
DEBUG:numba.byteflow:stack ['$14load_global.0', '$ytmp16.1']
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=416)
DEBUG:numba.byteflow:stack ['$14load_global.0', '$18load_attr.2']
DEBUG:numba.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=416)
DEBUG:numba.byteflow:stack ['$14load_global.0', '$18load_attr.2', '$const20.3']
DEBUG:numba.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=416)
DEBUG:numba.byteflow:stack ['$14load_global.0', '$22binary_subscr.4']
DEBUG:numba.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=416)
DEBUG:numba.byteflow:stack ['$24call_function.5']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.6',), blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi28.0']
DEBUG:numba.byteflow:dispatch pc=28, inst=FOR_ITER(arg=48, lineno=416)
DEBUG:numba.byteflow:stack ['$phi28.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=78, inst=POP_BLOCK(arg=None, lineno=418)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=80, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=80 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=4, lineno=416)
DEBUG:numba.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=4, lineno=417)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=417)
DEBUG:numba.byteflow:stack ['$phi30.0', '$frame32.2']
DEBUG:numba.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=417)
DEBUG:numba.byteflow:stack ['$phi30.0', '$frame32.2', '$hop_length34.3']
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=5, lineno=417)
DEBUG:numba.byteflow:stack ['$phi30.0', '$36binary_multiply.4']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=5, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=5, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$sample42.6']
DEBUG:numba.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=3, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$sample42.6', '$sample44.7']
DEBUG:numba.byteflow:dispatch pc=48, inst=BINARY_ADD(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$sample42.6', '$sample44.7', '$n_fft46.8']
DEBUG:numba.byteflow:dispatch pc=50, inst=BUILD_SLICE(arg=2, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$sample42.6', '$48binary_add.9']
DEBUG:numba.byteflow:dispatch pc=52, inst=DUP_TOP_TWO(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11']
DEBUG:numba.byteflow:dispatch pc=54, inst=BINARY_SUBSCR(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$52dup_top_two.12', '$52dup_top_two.13']
DEBUG:numba.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14']
DEBUG:numba.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=0, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15']
DEBUG:numba.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15', '$const58.16']
DEBUG:numba.byteflow:dispatch pc=62, inst=BUILD_SLICE(arg=2, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15', '$const58.16', '$const60.17']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=4, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15', '$62build_slice.19']
DEBUG:numba.byteflow:dispatch pc=66, inst=BUILD_TUPLE(arg=2, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15', '$62build_slice.19', '$frame64.20']
DEBUG:numba.byteflow:dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$ytmp56.15', '$66build_tuple.21']
DEBUG:numba.byteflow:dispatch pc=70, inst=INPLACE_ADD(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$54binary_subscr.14', '$68binary_subscr.22']
DEBUG:numba.byteflow:dispatch pc=72, inst=ROT_THREE(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$y40.5', '$50build_slice.11', '$70inplace_add.23']
DEBUG:numba.byteflow:dispatch pc=74, inst=STORE_SUBSCR(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0', '$70inplace_add.23', '$y40.5', '$50build_slice.11']
DEBUG:numba.byteflow:dispatch pc=76, inst=JUMP_ABSOLUTE(arg=28, lineno=418)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=80 nstack_initial=0), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=0, lineno=418)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=418)
DEBUG:numba.byteflow:stack ['$const80.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi28.0': State(pc_initial=12 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.6',
                           State(pc_initial=12 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.6', State(pc_initial=12 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=12 nstack_initial=0): {'$phi28.0': '$26get_iter.6'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ytmp2.0'}), (4, {'item': '$ytmp2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((14, {'res': '$14load_global.0'}), (16, {'res': '$ytmp16.1'}), (18, {'item': '$ytmp16.1', 'res': '$18load_attr.2'}), (20, {'res': '$const20.3'}), (22, {'index': '$const20.3', 'target': '$18load_attr.2', 'res': '$22binary_subscr.4'}), (24, {'func': '$14load_global.0', 'args': ['$22binary_subscr.4'], 'res': '$24call_function.5'}), (26, {'value': '$24call_function.5', 'res': '$26get_iter.6'})), outgoing_phis={'$phi28.0': '$26get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.6',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={78: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$frame32.2'}), (34, {'res': '$hop_length34.3'}), (36, {'lhs': '$frame32.2', 'rhs': '$hop_length34.3', 'res': '$36binary_multiply.4'}), (38, {'value': '$36binary_multiply.4'}), (40, {'res': '$y40.5'}), (42, {'res': '$sample42.6'}), (44, {'res': '$sample44.7'}), (46, {'res': '$n_fft46.8'}), (48, {'lhs': '$sample44.7', 'rhs': '$n_fft46.8', 'res': '$48binary_add.9'}), (50, {'start': '$sample42.6', 'stop': '$48binary_add.9', 'step': None, 'res': '$50build_slice.11', 'slicevar': '$50build_slice.10'}), (52, {'orig': ['$y40.5', '$50build_slice.11'], 'duped': ['$52dup_top_two.12', '$52dup_top_two.13']}), (54, {'index': '$52dup_top_two.13', 'target': '$52dup_top_two.12', 'res': '$54binary_subscr.14'}), (56, {'res': '$ytmp56.15'}), (58, {'res': '$const58.16'}), (60, {'res': '$const60.17'}), (62, {'start': '$const58.16', 'stop': '$const60.17', 'step': None, 'res': '$62build_slice.19', 'slicevar': '$62build_slice.18'}), (64, {'res': '$frame64.20'}), (66, {'items': ['$62build_slice.19', '$frame64.20'], 'res': '$66build_tuple.21'}), (68, {'index': '$66build_tuple.21', 'target': '$ytmp56.15', 'res': '$68binary_subscr.22'}), (70, {'lhs': '$54binary_subscr.14', 'rhs': '$68binary_subscr.22', 'res': '$70inplace_add.23'}), (74, {'target': '$y40.5', 'index': '$50build_slice.11', 'value': '$70inplace_add.23'}), (76, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 80, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={80: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=80 nstack_initial=0):
AdaptBlockInfo(insts=((80, {'res': '$const80.0'}), (82, {'retval': '$const80.0', 'castval': '$82return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    y = arg(0, name=y)                       ['y']
    ytmp = arg(1, name=ytmp)                 ['ytmp']
    hop_length = arg(2, name=hop_length)     ['hop_length']
    $4load_attr.1 = getattr(value=ytmp, attr=shape) ['$4load_attr.1', 'ytmp']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8binary_subscr.3 = getitem(value=$4load_attr.1, index=$const6.2) ['$4load_attr.1', '$8binary_subscr.3', '$const6.2']
    n_fft = $8binary_subscr.3                ['$8binary_subscr.3', 'n_fft']
    jump 12                                  []
label 12:
    $14load_global.0 = global(range: <class 'range'>) ['$14load_global.0']
    $18load_attr.2 = getattr(value=ytmp, attr=shape) ['$18load_attr.2', 'ytmp']
    $const20.3 = const(int, 1)               ['$const20.3']
    $22binary_subscr.4 = getitem(value=$18load_attr.2, index=$const20.3) ['$18load_attr.2', '$22binary_subscr.4', '$const20.3']
    $24call_function.5 = call $14load_global.0($22binary_subscr.4, func=$14load_global.0, args=[Var($22binary_subscr.4, spectrum.py:416)], kws=(), vararg=None) ['$14load_global.0', '$22binary_subscr.4', '$24call_function.5']
    $26get_iter.6 = getiter(value=$24call_function.5) ['$24call_function.5', '$26get_iter.6']
    $phi28.0 = $26get_iter.6                 ['$26get_iter.6', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 78             ['$28for_iter.3']
label 30:
    frame = $phi30.1                         ['$phi30.1', 'frame']
    $36binary_multiply.4 = frame * hop_length ['$36binary_multiply.4', 'frame', 'hop_length']
    sample = $36binary_multiply.4            ['$36binary_multiply.4', 'sample']
    $48binary_add.9 = sample + n_fft         ['$48binary_add.9', 'n_fft', 'sample']
    $50build_slice.10 = global(slice: <class 'slice'>) ['$50build_slice.10']
    $50build_slice.11 = call $50build_slice.10(sample, $48binary_add.9, func=$50build_slice.10, args=(Var(sample, spectrum.py:417), Var($48binary_add.9, spectrum.py:418)), kws=(), vararg=None) ['$48binary_add.9', '$50build_slice.10', '$50build_slice.11', 'sample']
    $54binary_subscr.14 = getitem(value=y, index=$50build_slice.11) ['$50build_slice.11', '$54binary_subscr.14', 'y']
    $const58.16 = const(NoneType, None)      ['$const58.16']
    $const60.17 = const(NoneType, None)      ['$const60.17']
    $62build_slice.18 = global(slice: <class 'slice'>) ['$62build_slice.18']
    $62build_slice.19 = call $62build_slice.18($const58.16, $const60.17, func=$62build_slice.18, args=(Var($const58.16, spectrum.py:418), Var($const60.17, spectrum.py:418)), kws=(), vararg=None) ['$62build_slice.18', '$62build_slice.19', '$const58.16', '$const60.17']
    $66build_tuple.21 = build_tuple(items=[Var($62build_slice.19, spectrum.py:418), Var(frame, spectrum.py:416)]) ['$62build_slice.19', '$66build_tuple.21', 'frame']
    $68binary_subscr.22 = getitem(value=ytmp, index=$66build_tuple.21) ['$66build_tuple.21', '$68binary_subscr.22', 'ytmp']
    $70inplace_add.23 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$54binary_subscr.14, rhs=$68binary_subscr.22, static_lhs=Undefined, static_rhs=Undefined) ['$54binary_subscr.14', '$68binary_subscr.22', '$70inplace_add.23']
    y[$50build_slice.11] = $70inplace_add.23 ['$50build_slice.11', '$70inplace_add.23', 'y']
    jump 28                                  []
label 78:
    jump 80                                  []
label 80:
    $const80.0 = const(NoneType, None)       ['$const80.0']
    $82return_value.1 = cast(value=$const80.0) ['$82return_value.1', '$const80.0']
    return $82return_value.1                 ['$82return_value.1']

DEBUG:numba.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1145)
           2	LOAD_GLOBAL(arg=0, lineno=1145)
           4	LOAD_FAST(arg=0, lineno=1145)
           6	CALL_FUNCTION(arg=1, lineno=1145)
           8	STORE_FAST(arg=4, lineno=1145)
          10	LOAD_GLOBAL(arg=0, lineno=1146)
          12	LOAD_FAST(arg=1, lineno=1146)
          14	CALL_FUNCTION(arg=1, lineno=1146)
          16	STORE_FAST(arg=5, lineno=1146)
          18	SETUP_LOOP(arg=78, lineno=1147)
          20	LOAD_GLOBAL(arg=1, lineno=1147)
          22	LOAD_FAST(arg=2, lineno=1147)
          24	CALL_FUNCTION(arg=1, lineno=1147)
          26	GET_ITER(arg=None, lineno=1147)
>         28	FOR_ITER(arg=66, lineno=1147)
          30	STORE_FAST(arg=6, lineno=1147)
          32	LOAD_FAST(arg=6, lineno=1148)
          34	LOAD_FAST(arg=3, lineno=1148)
          36	BINARY_MULTIPLY(arg=None, lineno=1148)
          38	STORE_FAST(arg=7, lineno=1148)
          40	LOAD_FAST(arg=0, lineno=1149)
          42	LOAD_FAST(arg=7, lineno=1149)
          44	LOAD_GLOBAL(arg=2, lineno=1149)
          46	LOAD_FAST(arg=4, lineno=1149)
          48	LOAD_FAST(arg=7, lineno=1149)
          50	LOAD_FAST(arg=5, lineno=1149)
          52	BINARY_ADD(arg=None, lineno=1149)
          54	CALL_FUNCTION(arg=2, lineno=1149)
          56	BUILD_SLICE(arg=2, lineno=1149)
          58	DUP_TOP_TWO(arg=None, lineno=1149)
          60	BINARY_SUBSCR(arg=None, lineno=1149)
          62	LOAD_FAST(arg=1, lineno=1149)
          64	LOAD_CONST(arg=1, lineno=1149)
          66	LOAD_GLOBAL(arg=3, lineno=1149)
          68	LOAD_CONST(arg=2, lineno=1149)
          70	LOAD_GLOBAL(arg=2, lineno=1149)
          72	LOAD_FAST(arg=5, lineno=1149)
          74	LOAD_FAST(arg=4, lineno=1149)
          76	LOAD_FAST(arg=7, lineno=1149)
          78	BINARY_SUBTRACT(arg=None, lineno=1149)
          80	CALL_FUNCTION(arg=2, lineno=1149)
          82	CALL_FUNCTION(arg=2, lineno=1149)
          84	BUILD_SLICE(arg=2, lineno=1149)
          86	BINARY_SUBSCR(arg=None, lineno=1149)
          88	INPLACE_ADD(arg=None, lineno=1149)
          90	ROT_THREE(arg=None, lineno=1149)
          92	STORE_SUBSCR(arg=None, lineno=1149)
          94	JUMP_ABSOLUTE(arg=28, lineno=1149)
>         96	POP_BLOCK(arg=None, lineno=1149)
>         98	LOAD_CONST(arg=1, lineno=1149)
         100	RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1145)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1145)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1145)
DEBUG:numba.byteflow:stack ['$2load_global.0']
DEBUG:numba.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1145)
DEBUG:numba.byteflow:stack ['$2load_global.0', '$x4.1']
DEBUG:numba.byteflow:dispatch pc=8, inst=STORE_FAST(arg=4, lineno=1145)
DEBUG:numba.byteflow:stack ['$6call_function.2']
DEBUG:numba.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=1146)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1146)
DEBUG:numba.byteflow:stack ['$10load_global.3']
DEBUG:numba.byteflow:dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=1146)
DEBUG:numba.byteflow:stack ['$10load_global.3', '$win_sq12.4']
DEBUG:numba.byteflow:dispatch pc=16, inst=STORE_FAST(arg=5, lineno=1146)
DEBUG:numba.byteflow:stack ['$14call_function.5']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=18, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=18 nstack_initial=0)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=18, inst=SETUP_LOOP(arg=78, lineno=1147)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=1147)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=1147)
DEBUG:numba.byteflow:stack ['$20load_global.0']
DEBUG:numba.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=1, lineno=1147)
DEBUG:numba.byteflow:stack ['$20load_global.0', '$n_frames22.1']
DEBUG:numba.byteflow:dispatch pc=26, inst=GET_ITER(arg=None, lineno=1147)
DEBUG:numba.byteflow:stack ['$24call_function.2']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=28, stack=('$26get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:stack: ['$phi28.0']
DEBUG:numba.byteflow:dispatch pc=28, inst=FOR_ITER(arg=66, lineno=1147)
DEBUG:numba.byteflow:stack ['$phi28.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=96, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=30, stack=('$phi28.0', '$28for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=30 nstack_initial=2)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=96, inst=POP_BLOCK(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=30 nstack_initial=2), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.byteflow:stack: ['$phi30.0', '$phi30.1']
DEBUG:numba.byteflow:dispatch pc=30, inst=STORE_FAST(arg=6, lineno=1147)
DEBUG:numba.byteflow:stack ['$phi30.0', '$phi30.1']
DEBUG:numba.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=6, lineno=1148)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=3, lineno=1148)
DEBUG:numba.byteflow:stack ['$phi30.0', '$i32.2']
DEBUG:numba.byteflow:dispatch pc=36, inst=BINARY_MULTIPLY(arg=None, lineno=1148)
DEBUG:numba.byteflow:stack ['$phi30.0', '$i32.2', '$hop_length34.3']
DEBUG:numba.byteflow:dispatch pc=38, inst=STORE_FAST(arg=7, lineno=1148)
DEBUG:numba.byteflow:stack ['$phi30.0', '$36binary_multiply.4']
DEBUG:numba.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:dispatch pc=42, inst=LOAD_FAST(arg=7, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5']
DEBUG:numba.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6']
DEBUG:numba.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$44load_global.7']
DEBUG:numba.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=7, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$44load_global.7', '$n46.8']
DEBUG:numba.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$44load_global.7', '$n46.8', '$sample48.9']
DEBUG:numba.byteflow:dispatch pc=52, inst=BINARY_ADD(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$44load_global.7', '$n46.8', '$sample48.9', '$n_fft50.10']
DEBUG:numba.byteflow:dispatch pc=54, inst=CALL_FUNCTION(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$44load_global.7', '$n46.8', '$52binary_add.11']
DEBUG:numba.byteflow:dispatch pc=56, inst=BUILD_SLICE(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$sample42.6', '$54call_function.12']
DEBUG:numba.byteflow:dispatch pc=58, inst=DUP_TOP_TWO(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14']
DEBUG:numba.byteflow:dispatch pc=60, inst=BINARY_SUBSCR(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$58dup_top_two.15', '$58dup_top_two.16']
DEBUG:numba.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17']
DEBUG:numba.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18']
DEBUG:numba.byteflow:dispatch pc=66, inst=LOAD_GLOBAL(arg=3, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19']
DEBUG:numba.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20']
DEBUG:numba.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21']
DEBUG:numba.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$70load_global.22']
DEBUG:numba.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$70load_global.22', '$n_fft72.23']
DEBUG:numba.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=7, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$70load_global.22', '$n_fft72.23', '$n74.24']
DEBUG:numba.byteflow:dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$70load_global.22', '$n_fft72.23', '$n74.24', '$sample76.25']
DEBUG:numba.byteflow:dispatch pc=80, inst=CALL_FUNCTION(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$70load_global.22', '$n_fft72.23', '$78binary_subtract.26']
DEBUG:numba.byteflow:dispatch pc=82, inst=CALL_FUNCTION(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$66load_global.20', '$const68.21', '$80call_function.27']
DEBUG:numba.byteflow:dispatch pc=84, inst=BUILD_SLICE(arg=2, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$const64.19', '$82call_function.28']
DEBUG:numba.byteflow:dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$win_sq62.18', '$84build_slice.30']
DEBUG:numba.byteflow:dispatch pc=88, inst=INPLACE_ADD(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$60binary_subscr.17', '$86binary_subscr.31']
DEBUG:numba.byteflow:dispatch pc=90, inst=ROT_THREE(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$x40.5', '$56build_slice.14', '$88inplace_add.32']
DEBUG:numba.byteflow:dispatch pc=92, inst=STORE_SUBSCR(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0', '$88inplace_add.32', '$x40.5', '$56build_slice.14']
DEBUG:numba.byteflow:dispatch pc=94, inst=JUMP_ABSOLUTE(arg=28, lineno=1149)
DEBUG:numba.byteflow:stack ['$phi30.0']
DEBUG:numba.byteflow:end state. edges=[Edge(pc=28, stack=('$phi30.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:stack: []
DEBUG:numba.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=1, lineno=1149)
DEBUG:numba.byteflow:stack []
DEBUG:numba.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.byteflow:stack ['$const98.0']
DEBUG:numba.byteflow:end state. edges=[]
DEBUG:numba.byteflow:pending: deque([State(pc_initial=28 nstack_initial=1)])
DEBUG:numba.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=1): {'$phi28.0'},
             State(pc_initial=30 nstack_initial=2): {'$phi30.1'},
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set()})
DEBUG:numba.byteflow:defmap: {'$phi28.0': State(pc_initial=18 nstack_initial=0),
 '$phi30.1': State(pc_initial=28 nstack_initial=1)}
DEBUG:numba.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi30.0', State(pc_initial=30 nstack_initial=2))},
             '$phi30.0': {('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=1))},
             '$phi30.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi28.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi30.0': {('$26get_iter.3',
                           State(pc_initial=18 nstack_initial=0))},
             '$phi30.1': {('$28for_iter.2',
                           State(pc_initial=28 nstack_initial=1))}})
DEBUG:numba.byteflow:keep phismap: {'$phi28.0': {('$26get_iter.3', State(pc_initial=18 nstack_initial=0))},
 '$phi30.1': {('$28for_iter.2', State(pc_initial=28 nstack_initial=1))}}
DEBUG:numba.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=18 nstack_initial=0): {'$phi28.0': '$26get_iter.3'},
             State(pc_initial=28 nstack_initial=1): {'$phi30.1': '$28for_iter.2'}})
DEBUG:numba.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$win_sq12.4'}), (14, {'func': '$10load_global.3', 'args': ['$win_sq12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=18 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'res': '$n_frames22.1'}), (24, {'func': '$20load_global.0', 'args': ['$n_frames22.1'], 'res': '$24call_function.2'}), (26, {'value': '$24call_function.2', 'res': '$26get_iter.3'})), outgoing_phis={'$phi28.0': '$26get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: ('$26get_iter.3',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=28 nstack_initial=1):
AdaptBlockInfo(insts=((28, {'iterator': '$phi28.0', 'pair': '$28for_iter.1', 'indval': '$28for_iter.2', 'pred': '$28for_iter.3'}),), outgoing_phis={'$phi30.1': '$28for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={96: (), 30: ('$phi28.0', '$28for_iter.2')})
DEBUG:numba.byteflow:block_infos State(pc_initial=30 nstack_initial=2):
AdaptBlockInfo(insts=((30, {'value': '$phi30.1'}), (32, {'res': '$i32.2'}), (34, {'res': '$hop_length34.3'}), (36, {'lhs': '$i32.2', 'rhs': '$hop_length34.3', 'res': '$36binary_multiply.4'}), (38, {'value': '$36binary_multiply.4'}), (40, {'res': '$x40.5'}), (42, {'res': '$sample42.6'}), (44, {'res': '$44load_global.7'}), (46, {'res': '$n46.8'}), (48, {'res': '$sample48.9'}), (50, {'res': '$n_fft50.10'}), (52, {'lhs': '$sample48.9', 'rhs': '$n_fft50.10', 'res': '$52binary_add.11'}), (54, {'func': '$44load_global.7', 'args': ['$n46.8', '$52binary_add.11'], 'res': '$54call_function.12'}), (56, {'start': '$sample42.6', 'stop': '$54call_function.12', 'step': None, 'res': '$56build_slice.14', 'slicevar': '$56build_slice.13'}), (58, {'orig': ['$x40.5', '$56build_slice.14'], 'duped': ['$58dup_top_two.15', '$58dup_top_two.16']}), (60, {'index': '$58dup_top_two.16', 'target': '$58dup_top_two.15', 'res': '$60binary_subscr.17'}), (62, {'res': '$win_sq62.18'}), (64, {'res': '$const64.19'}), (66, {'res': '$66load_global.20'}), (68, {'res': '$const68.21'}), (70, {'res': '$70load_global.22'}), (72, {'res': '$n_fft72.23'}), (74, {'res': '$n74.24'}), (76, {'res': '$sample76.25'}), (78, {'lhs': '$n74.24', 'rhs': '$sample76.25', 'res': '$78binary_subtract.26'}), (80, {'func': '$70load_global.22', 'args': ['$n_fft72.23', '$78binary_subtract.26'], 'res': '$80call_function.27'}), (82, {'func': '$66load_global.20', 'args': ['$const68.21', '$80call_function.27'], 'res': '$82call_function.28'}), (84, {'start': '$const64.19', 'stop': '$82call_function.28', 'step': None, 'res': '$84build_slice.30', 'slicevar': '$84build_slice.29'}), (86, {'index': '$84build_slice.30', 'target': '$win_sq62.18', 'res': '$86binary_subscr.31'}), (88, {'lhs': '$60binary_subscr.17', 'rhs': '$86binary_subscr.31', 'res': '$88inplace_add.32'}), (92, {'target': '$x40.5', 'index': '$56build_slice.14', 'value': '$88inplace_add.32'}), (94, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={28: ('$phi30.0',)})
DEBUG:numba.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 98, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={98: ()})
DEBUG:numba.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'retval': '$const98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    win_sq = arg(1, name=win_sq)             ['win_sq']
    n_frames = arg(2, name=n_frames)         ['n_frames']
    hop_length = arg(3, name=hop_length)     ['hop_length']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, filters.py:1145)], kws=(), vararg=None) ['$2load_global.0', '$6call_function.2', 'x']
    n = $6call_function.2                    ['$6call_function.2', 'n']
    $10load_global.3 = global(len: <built-in function len>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(win_sq, func=$10load_global.3, args=[Var(win_sq, filters.py:1145)], kws=(), vararg=None) ['$10load_global.3', '$14call_function.5', 'win_sq']
    n_fft = $14call_function.5               ['$14call_function.5', 'n_fft']
    jump 18                                  []
label 18:
    $20load_global.0 = global(range: <class 'range'>) ['$20load_global.0']
    $24call_function.2 = call $20load_global.0(n_frames, func=$20load_global.0, args=[Var(n_frames, filters.py:1145)], kws=(), vararg=None) ['$20load_global.0', '$24call_function.2', 'n_frames']
    $26get_iter.3 = getiter(value=$24call_function.2) ['$24call_function.2', '$26get_iter.3']
    $phi28.0 = $26get_iter.3                 ['$26get_iter.3', '$phi28.0']
    jump 28                                  []
label 28:
    $28for_iter.1 = iternext(value=$phi28.0) ['$28for_iter.1', '$phi28.0']
    $28for_iter.2 = pair_first(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.2']
    $28for_iter.3 = pair_second(value=$28for_iter.1) ['$28for_iter.1', '$28for_iter.3']
    $phi30.1 = $28for_iter.2                 ['$28for_iter.2', '$phi30.1']
    branch $28for_iter.3, 30, 96             ['$28for_iter.3']
label 30:
    i = $phi30.1                             ['$phi30.1', 'i']
    $36binary_multiply.4 = i * hop_length    ['$36binary_multiply.4', 'hop_length', 'i']
    sample = $36binary_multiply.4            ['$36binary_multiply.4', 'sample']
    $44load_global.7 = global(min: <built-in function min>) ['$44load_global.7']
    $52binary_add.11 = sample + n_fft        ['$52binary_add.11', 'n_fft', 'sample']
    $54call_function.12 = call $44load_global.7(n, $52binary_add.11, func=$44load_global.7, args=[Var(n, filters.py:1145), Var($52binary_add.11, filters.py:1149)], kws=(), vararg=None) ['$44load_global.7', '$52binary_add.11', '$54call_function.12', 'n']
    $56build_slice.13 = global(slice: <class 'slice'>) ['$56build_slice.13']
    $56build_slice.14 = call $56build_slice.13(sample, $54call_function.12, func=$56build_slice.13, args=(Var(sample, filters.py:1148), Var($54call_function.12, filters.py:1149)), kws=(), vararg=None) ['$54call_function.12', '$56build_slice.13', '$56build_slice.14', 'sample']
    $60binary_subscr.17 = getitem(value=x, index=$56build_slice.14) ['$56build_slice.14', '$60binary_subscr.17', 'x']
    $const64.19 = const(NoneType, None)      ['$const64.19']
    $66load_global.20 = global(max: <built-in function max>) ['$66load_global.20']
    $const68.21 = const(int, 0)              ['$const68.21']
    $70load_global.22 = global(min: <built-in function min>) ['$70load_global.22']
    $78binary_subtract.26 = n - sample       ['$78binary_subtract.26', 'n', 'sample']
    $80call_function.27 = call $70load_global.22(n_fft, $78binary_subtract.26, func=$70load_global.22, args=[Var(n_fft, filters.py:1146), Var($78binary_subtract.26, filters.py:1149)], kws=(), vararg=None) ['$70load_global.22', '$78binary_subtract.26', '$80call_function.27', 'n_fft']
    $82call_function.28 = call $66load_global.20($const68.21, $80call_function.27, func=$66load_global.20, args=[Var($const68.21, filters.py:1149), Var($80call_function.27, filters.py:1149)], kws=(), vararg=None) ['$66load_global.20', '$80call_function.27', '$82call_function.28', '$const68.21']
    $84build_slice.29 = global(slice: <class 'slice'>) ['$84build_slice.29']
    $84build_slice.30 = call $84build_slice.29($const64.19, $82call_function.28, func=$84build_slice.29, args=(Var($const64.19, filters.py:1149), Var($82call_function.28, filters.py:1149)), kws=(), vararg=None) ['$82call_function.28', '$84build_slice.29', '$84build_slice.30', '$const64.19']
    $86binary_subscr.31 = getitem(value=win_sq, index=$84build_slice.30) ['$84build_slice.30', '$86binary_subscr.31', 'win_sq']
    $88inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$60binary_subscr.17, rhs=$86binary_subscr.31, static_lhs=Undefined, static_rhs=Undefined) ['$60binary_subscr.17', '$86binary_subscr.31', '$88inplace_add.32']
    x[$56build_slice.14] = $88inplace_add.32 ['$56build_slice.14', '$88inplace_add.32', 'x']
    jump 28                                  []
label 96:
    jump 98                                  []
label 98:
    $const98.0 = const(NoneType, None)       ['$const98.0']
    $100return_value.1 = cast(value=$const98.0) ['$100return_value.1', '$const98.0']
    return $100return_value.1                ['$100return_value.1']

DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/numpy/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
ERROR: :file_broken or not exists!! : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/train/normal_id_02_00000800.wav
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/100:train_loss:0.494384, valid_loss:0.273479
INFO:pytorch_modeler.py:Epoch 2/100:train_loss:0.229431, valid_loss:0.155787
INFO:pytorch_modeler.py:Epoch 3/100:train_loss:0.154540, valid_loss:0.102270
INFO:pytorch_modeler.py:Epoch 4/100:train_loss:0.111677, valid_loss:0.076362
INFO:pytorch_modeler.py:Epoch 5/100:train_loss:0.084138, valid_loss:0.052687
INFO:pytorch_modeler.py:Epoch 6/100:train_loss:0.063900, valid_loss:0.041274
INFO:pytorch_modeler.py:Epoch 7/100:train_loss:0.049115, valid_loss:0.030326
INFO:pytorch_modeler.py:Epoch 8/100:train_loss:0.038074, valid_loss:0.022642
INFO:pytorch_modeler.py:Epoch 9/100:train_loss:0.029532, valid_loss:0.016900
INFO:pytorch_modeler.py:Epoch 10/100:train_loss:0.023320, valid_loss:0.013569
INFO:pytorch_modeler.py:Epoch 11/100:train_loss:0.018301, valid_loss:0.010554
INFO:pytorch_modeler.py:Epoch 12/100:train_loss:0.014339, valid_loss:0.008228
INFO:pytorch_modeler.py:Epoch 13/100:train_loss:0.011226, valid_loss:0.006473
INFO:pytorch_modeler.py:Epoch 14/100:train_loss:0.008647, valid_loss:0.004491
INFO:pytorch_modeler.py:Epoch 15/100:train_loss:0.006705, valid_loss:0.003487
INFO:pytorch_modeler.py:Epoch 16/100:train_loss:0.005140, valid_loss:0.002605
INFO:pytorch_modeler.py:Epoch 17/100:train_loss:0.003929, valid_loss:0.001909
INFO:pytorch_modeler.py:Epoch 18/100:train_loss:0.002971, valid_loss:0.001420
INFO:pytorch_modeler.py:Epoch 19/100:train_loss:0.002258, valid_loss:0.001068
INFO:pytorch_modeler.py:Epoch 20/100:train_loss:0.001687, valid_loss:0.000721
INFO:pytorch_modeler.py:Epoch 21/100:train_loss:0.001263, valid_loss:0.000582
INFO:pytorch_modeler.py:Epoch 22/100:train_loss:0.000945, valid_loss:0.000400
INFO:pytorch_modeler.py:Epoch 23/100:train_loss:0.000704, valid_loss:0.000291
INFO:pytorch_modeler.py:Epoch 24/100:train_loss:0.000525, valid_loss:0.000235
INFO:pytorch_modeler.py:Epoch 25/100:train_loss:0.000389, valid_loss:0.000164
INFO:pytorch_modeler.py:Epoch 26/100:train_loss:0.000288, valid_loss:0.000111
INFO:pytorch_modeler.py:Epoch 27/100:train_loss:0.000215, valid_loss:0.000090
INFO:pytorch_modeler.py:Epoch 28/100:train_loss:0.000159, valid_loss:0.000062
INFO:pytorch_modeler.py:Epoch 29/100:train_loss:0.000118, valid_loss:0.000044
INFO:pytorch_modeler.py:Epoch 30/100:train_loss:0.000088, valid_loss:0.000033
INFO:pytorch_modeler.py:Epoch 31/100:train_loss:0.000066, valid_loss:0.000024
INFO:pytorch_modeler.py:Epoch 32/100:train_loss:0.000049, valid_loss:0.000018
INFO:pytorch_modeler.py:Epoch 33/100:train_loss:0.000037, valid_loss:0.000012
INFO:pytorch_modeler.py:Epoch 34/100:train_loss:0.000028, valid_loss:0.000010
INFO:pytorch_modeler.py:Epoch 35/100:train_loss:0.000021, valid_loss:0.000007
INFO:pytorch_modeler.py:Epoch 36/100:train_loss:0.000016, valid_loss:0.000006
INFO:pytorch_modeler.py:Epoch 37/100:train_loss:0.000012, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 38/100:train_loss:0.000009, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 39/100:train_loss:0.000007, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 40/100:train_loss:0.000005, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 41/100:train_loss:0.000004, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 42/100:train_loss:0.000004, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 43/100:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 44/100:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 45/100:train_loss:0.000002, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 46/100:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 47/100:train_loss:0.000003, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 48/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 49/100:train_loss:0.000003, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 50/100:train_loss:0.000002, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 51/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 52/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 53/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 54/100:train_loss:0.000003, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 55/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 56/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 57/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 58/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 59/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 60/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 61/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 62/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 63/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 64/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 65/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 66/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 67/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 68/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 69/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 70/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 71/100:train_loss:0.000002, valid_loss:0.000006
INFO:pytorch_modeler.py:Epoch 72/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 73/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 74/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 75/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 76/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 77/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 78/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 79/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 80/100:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 81/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 82/100:train_loss:0.000002, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 83/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 84/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 85/100:train_loss:0.000002, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 86/100:train_loss:0.000002, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 87/100:train_loss:0.000001, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 88/100:train_loss:0.000001, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 89/100:train_loss:0.000001, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 90/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 91/100:train_loss:0.000002, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 92/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 93/100:train_loss:0.000001, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 94/100:train_loss:0.000002, valid_loss:0.000000
INFO:pytorch_modeler.py:Epoch 95/100:train_loss:0.000001, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 96/100:train_loss:0.000001, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 97/100:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 98/100:train_loss:0.000001, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 99/100:train_loss:0.000001, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 100/100:train_loss:0.000001, valid_loss:0.000001
INFO:00_train.py:
 success:ToyCar 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE_debug/models/ToyCar_model.pth
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:5] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:4] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/pickle.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:5] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 15
DEBUG:parso.python.diff:-> code[replace] old[1:4] new[1:15]
DEBUG:parso.python.diff:parse_part from 1 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 15
DEBUG:parso.python.diff:-> code[equal] old[1:14] new[1:14]
DEBUG:parso.python.diff:copy old[5:14] new[1:14]
DEBUG:parso.python.diff:-> code[replace] old[15:15] new[15:15]
DEBUG:parso.python.diff:parse_part from 15 to 15 (to 14 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 15; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:15] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:4] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 6
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:6]
DEBUG:parso.python.diff:parse_part from 1 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
INFO:00_train.py:TARGET MACHINE_TYPE: fan
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:0.646308, valid_loss:0.398337
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:0.299575, valid_loss:0.232260
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:0.201817, valid_loss:0.150292
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:0.149353, valid_loss:0.105018
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:0.113122, valid_loss:0.077087
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:0.087283, valid_loss:0.055833
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:0.067820, valid_loss:0.044493
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:0.053577, valid_loss:0.034172
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:0.042577, valid_loss:0.026782
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:0.033868, valid_loss:0.021413
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:0.026750, valid_loss:0.015986
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:0.021208, valid_loss:0.012187
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:0.016778, valid_loss:0.009598
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:0.013200, valid_loss:0.007891
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:0.010409, valid_loss:0.005703
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:0.008054, valid_loss:0.004434
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:0.006266, valid_loss:0.003280
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:0.004821, valid_loss:0.002563
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:0.003704, valid_loss:0.001813
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:0.002827, valid_loss:0.001406
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:0.002115, valid_loss:0.001107
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:0.001607, valid_loss:0.000715
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:0.001213, valid_loss:0.000572
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:0.000903, valid_loss:0.000408
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:0.000678, valid_loss:0.000283
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:0.000506, valid_loss:0.000216
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:0.000378, valid_loss:0.000155
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:0.000286, valid_loss:0.000112
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:0.000215, valid_loss:0.000094
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:0.000163, valid_loss:0.000073
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:0.000123, valid_loss:0.000049
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:0.000094, valid_loss:0.000038
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:0.000071, valid_loss:0.000028
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:0.000054, valid_loss:0.000020
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:0.000041, valid_loss:0.000017
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:0.000032, valid_loss:0.000012
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:0.000025, valid_loss:0.000010
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:0.000019, valid_loss:0.000007
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:0.000015, valid_loss:0.000006
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:0.000011, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:0.000009, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:0.000007, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:0.000006, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:0.000005, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:0.000004, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:0.000004, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:0.000003, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:0.000002, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:0.000003, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:0.000003, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:0.000002, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:0.000003, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:0.000002, valid_loss:0.000009
INFO:00_train.py:
 success:fan 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/fan_model.pth
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/afm.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/animation.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/artist.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/axes/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/axis.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/backend_managers.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/backend_tools.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/backends/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/bezier.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/blocking_input.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/category.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/cbook/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/cm.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/collections.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/colorbar.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/colors.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/compat/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/container.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/contour.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/dates.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/docstring.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/dviread.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/figure.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/font_manager.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/fontconfig_pattern.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/gridspec.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/hatch.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/image.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/legend.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/legend_handler.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/lines.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/markers.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mathtext.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/pylab.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/seaborn/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb1723e950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb1723e950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb173b6a50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb173b6a50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb16f48810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fdb16f48810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: pump
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:0.694016, valid_loss:0.382894
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:0.322726, valid_loss:0.239005
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:0.219777, valid_loss:0.162301
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:0.164889, valid_loss:0.119786
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:0.128649, valid_loss:0.088233
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:0.102046, valid_loss:0.071777
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:0.082187, valid_loss:0.056892
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:0.066702, valid_loss:0.044921
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:0.053753, valid_loss:0.033333
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:0.044312, valid_loss:0.029355
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:0.035996, valid_loss:0.022153
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:0.029295, valid_loss:0.018040
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:0.024107, valid_loss:0.014403
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:0.019602, valid_loss:0.011927
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:0.015781, valid_loss:0.008553
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:0.012720, valid_loss:0.007073
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:0.010365, valid_loss:0.005941
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:0.008301, valid_loss:0.004587
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:0.006629, valid_loss:0.003565
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:0.005315, valid_loss:0.002779
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:0.004208, valid_loss:0.002116
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:0.003303, valid_loss:0.001651
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:0.002602, valid_loss:0.001273
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:0.002036, valid_loss:0.001031
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:0.001574, valid_loss:0.000731
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:0.001222, valid_loss:0.000573
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:0.000945, valid_loss:0.000466
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:0.000715, valid_loss:0.000312
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:0.000550, valid_loss:0.000248
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:0.000419, valid_loss:0.000181
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:0.000322, valid_loss:0.000140
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:0.000245, valid_loss:0.000095
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:0.000189, valid_loss:0.000083
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:0.000145, valid_loss:0.000062
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:0.000112, valid_loss:0.000048
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:0.000086, valid_loss:0.000035
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:0.000067, valid_loss:0.000027
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:0.000052, valid_loss:0.000021
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:0.000040, valid_loss:0.000016
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:0.000032, valid_loss:0.000012
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:0.000025, valid_loss:0.000010
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:0.000020, valid_loss:0.000008
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:0.000015, valid_loss:0.000006
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:0.000012, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:0.000010, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:0.000008, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:0.000007, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:0.000005, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:0.000004, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:0.000004, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:0.000002, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:0.000003, valid_loss:0.000001
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:0.000002, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:0.000002, valid_loss:0.000001
INFO:00_train.py:
 success:pump 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/pump_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:0.703645, valid_loss:0.423539
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:0.314375, valid_loss:0.254736
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:0.220465, valid_loss:0.180888
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:0.168061, valid_loss:0.141877
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:0.134019, valid_loss:0.104431
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:0.108326, valid_loss:0.084747
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:0.088796, valid_loss:0.068997
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:0.073258, valid_loss:0.054488
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:3] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:3] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:3] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:0.682510, valid_loss:0.387312
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:0.310358, valid_loss:0.252133
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:0.219756, valid_loss:0.172150
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:0.166360, valid_loss:0.136640
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:0.132594, valid_loss:0.103617
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:0.108100, valid_loss:0.088481
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 20
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:20]
DEBUG:parso.python.diff:parse_part from 1 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 20
DEBUG:parso.python.diff:-> code[equal] old[1:19] new[1:19]
DEBUG:parso.python.diff:copy old[4:19] new[1:19]
DEBUG:parso.python.diff:-> code[replace] old[20:20] new[20:20]
DEBUG:parso.python.diff:parse_part from 20 to 20 (to 19 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 20; new: 31
DEBUG:parso.python.diff:-> code[replace] old[1:10] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[11:11] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 6 in part parser)
DEBUG:parso.python.diff:-> code[insert] old[12:11] new[3:4]
DEBUG:parso.python.diff:-> code[equal] old[12:12] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 7 (to 9 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:20] new[6:31]
DEBUG:parso.python.diff:parse_part from 8 to 31 (to 30 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 31; new: 31
DEBUG:parso.python.diff:-> code[equal] old[1:30] new[1:30]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 31 (to 30 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[31:31] new[31:31]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 31; new: 31
DEBUG:parso.python.diff:-> code[equal] old[1:30] new[1:30]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 31 (to 30 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[31:31] new[31:31]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 31; new: 31
DEBUG:parso.python.diff:-> code[equal] old[1:30] new[1:30]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 31 (to 30 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[31:31] new[31:31]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:0.088821, valid_loss:0.069277
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:0.073401, valid_loss:0.057078
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:0.060509, valid_loss:0.044772
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:0.051110, valid_loss:0.039992
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:0.042638, valid_loss:0.031526
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:0.035543, valid_loss:0.026966
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:0.029668, valid_loss:0.021602
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:0.024878, valid_loss:0.017050
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:0.020704, valid_loss:0.013422
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:0.017318, valid_loss:0.011901
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:0.014350, valid_loss:0.008610
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:0.011908, valid_loss:0.008182
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:0.009822, valid_loss:0.006538
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:0.008147, valid_loss:0.005494
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:0.006622, valid_loss:0.004174
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:0.005446, valid_loss:0.003250
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:0.004450, valid_loss:0.002942
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:0.003625, valid_loss:0.002147
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:0.002957, valid_loss:0.001966
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:0.002409, valid_loss:0.001578
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:0.001898, valid_loss:0.001149
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:0.001540, valid_loss:0.001061
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:0.001218, valid_loss:0.000701
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:0.000978, valid_loss:0.000608
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:0.000786, valid_loss:0.000498
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:0.000627, valid_loss:0.000395
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:0.000504, valid_loss:0.000332
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:0.000403, valid_loss:0.000234
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:0.000324, valid_loss:0.000189
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:0.000262, valid_loss:0.000149
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:0.000210, valid_loss:0.000121
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:0.000171, valid_loss:0.000103
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:0.000139, valid_loss:0.000075
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:0.000112, valid_loss:0.000062
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:0.000092, valid_loss:0.000049
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:0.000075, valid_loss:0.000038
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:0.000062, valid_loss:0.000033
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:0.000050, valid_loss:0.000024
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:0.000042, valid_loss:0.000020
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 31; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:31] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:0.000034, valid_loss:0.000017
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:0.000028, valid_loss:0.000014
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:0.000023, valid_loss:0.000011
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:0.000019, valid_loss:0.000009
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:0.000016, valid_loss:0.000009
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 25
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:25]
DEBUG:parso.python.diff:parse_part from 1 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 46
DEBUG:parso.python.diff:-> code[replace] old[1:10] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[11:11] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 6 in part parser)
DEBUG:parso.python.diff:-> code[insert] old[12:11] new[3:4]
DEBUG:parso.python.diff:-> code[equal] old[12:12] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 7 (to 9 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:25] new[6:46]
DEBUG:parso.python.diff:parse_part from 8 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 46
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 46 (to 45 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:46]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:0.000013, valid_loss:0.000006
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 46; new: 92
DEBUG:parso.python.diff:-> code[equal] old[1:45] new[1:45]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 92 (to 91 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[46:46] new[46:92]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:0.000011, valid_loss:0.000005
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:0.000009, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:0.000008, valid_loss:0.000004
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:0.000007, valid_loss:0.000003
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 92; new: 68
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:92] new[68:68]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/common.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 68
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:68] new[68:68]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 68
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:68] new[68:68]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 68
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:68] new[68:68]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 68
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:68] new[68:68]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:0.000006, valid_loss:0.000003
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:0.000005, valid_loss:0.000002
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:67] new[1:67]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[68:68] new[68:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 75
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 75 (to 74 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:75]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 75; new: 75
DEBUG:parso.python.diff:-> code[equal] old[1:74] new[1:74]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 75 (to 74 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[75:75] new[75:75]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 75; new: 75
DEBUG:parso.python.diff:-> code[equal] old[1:74] new[1:74]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 75 (to 74 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[75:75] new[75:75]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:0.000004, valid_loss:0.000002
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 75; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:75] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:10] new[1:10]
DEBUG:parso.python.diff:parse_part from 11 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:0.000004, valid_loss:0.000002
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:0.000003, valid_loss:0.000001
INFO:00_train.py:
 success:slider 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/slider_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: ToyConveyor
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:0.530865, valid_loss:0.308926
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:74] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:0.258707, valid_loss:0.181325
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:0.176974, valid_loss:0.131237
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:0.131075, valid_loss:0.094046
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:0.101639, valid_loss:0.077966
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:0.079067, valid_loss:0.054819
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:0.062580, valid_loss:0.042781
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:0.049626, valid_loss:0.032907
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:0.039843, valid_loss:0.026545
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:0.032033, valid_loss:0.019016
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:0.025732, valid_loss:0.015725
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:0.020750, valid_loss:0.011611
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:0.016832, valid_loss:0.009921
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:0.013453, valid_loss:0.007658
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:0.010863, valid_loss:0.006035
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:0.008743, valid_loss:0.004726
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:0.006981, valid_loss:0.003762
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:0.005572, valid_loss:0.003032
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:0.004394, valid_loss:0.002269
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:0.003482, valid_loss:0.001815
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:0.002710, valid_loss:0.001272
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:0.002138, valid_loss:0.001074
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:4]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:4] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:5]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 12
DEBUG:parso.python.diff:-> code[replace] old[1:5] new[1:12]
DEBUG:parso.python.diff:parse_part from 1 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 12
DEBUG:parso.python.diff:-> code[equal] old[1:11] new[1:11]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:-> code[replace] old[12:12] new[12:12]
DEBUG:parso.python.diff:parse_part from 12 to 12 (to 11 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c65adb50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c65adb50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6311a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6311a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 12; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:12] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c22c0c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c22c0c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c08bcd50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c08bcd50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c067e810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c067e810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c05c3e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c05c3e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0547750>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0547750>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0443d10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0443d10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:0.001649, valid_loss:0.000783
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c62b8310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c62b8310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6847890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6847890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6ad4d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6ad4d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6a2cf90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6a2cf90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c68264d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c68264d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c609fc10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c609fc10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6221650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6221650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c05e8890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c05e8890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c03f5e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c03f5e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0665050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c0665050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:0.001284, valid_loss:0.000579
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c03036d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c03036d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c01ffed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c01ffed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c00fb990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c00fb990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae8231d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae8231d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae726750>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae726750>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae7d70d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35ae7d70d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35cc0da9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35cc0da9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6826f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6826f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:0.000983, valid_loss:0.000481
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:0.000763, valid_loss:0.000343
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6b9bc90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6b9bc90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6bbd8d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6bbd8d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:0.000587, valid_loss:0.000245
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:0.000452, valid_loss:0.000205
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6b5b490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c6b5b490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c65ad1d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35c65ad1d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:0.000351, valid_loss:0.000133
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: fan
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:802.505344, valid_loss:623.348785
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:400.348326, valid_loss:222.107298
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:112.467871, valid_loss:41.177093
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:19.791620, valid_loss:7.842726
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:6.845906, valid_loss:5.520496
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:5.641741, valid_loss:5.035357
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:5.266539, valid_loss:4.847453
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:4.961488, valid_loss:4.446625
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:4.683553, valid_loss:4.159498
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:4.453416, valid_loss:3.860945
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:4.241454, valid_loss:3.851668
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:4.028431, valid_loss:3.358743
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:3.878868, valid_loss:3.288370
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:3.702973, valid_loss:3.043068
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:3.503384, valid_loss:2.743857
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:3.301339, valid_loss:2.565890
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:3.180338, valid_loss:2.543782
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:2.984976, valid_loss:2.313816
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:2.885978, valid_loss:2.193499
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:2.814317, valid_loss:2.150677
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:2.745140, valid_loss:1.982412
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:2.628971, valid_loss:1.915940
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:2.547678, valid_loss:1.889517
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:2.508598, valid_loss:2.029295
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:2.470888, valid_loss:1.683582
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:2.357873, valid_loss:1.551811
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:2.348057, valid_loss:1.696144
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:2.315788, valid_loss:1.501211
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.236994, valid_loss:1.678314
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.196381, valid_loss:1.392083
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.106125, valid_loss:1.380116
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.087751, valid_loss:1.381954
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.060379, valid_loss:1.388710
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.071881, valid_loss:1.314679
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.031736, valid_loss:1.261270
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:1.978649, valid_loss:1.236400
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:1.968184, valid_loss:1.321479
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:1.930498, valid_loss:1.245569
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:1.895214, valid_loss:1.364636
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:1.901738, valid_loss:1.285869
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:1.898832, valid_loss:1.294155
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:1.834660, valid_loss:1.086684
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:1.880913, valid_loss:1.127280
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:1.795258, valid_loss:1.186368
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:1.797243, valid_loss:1.335545
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:1.798420, valid_loss:1.406750
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:1.744188, valid_loss:1.039225
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:1.735253, valid_loss:1.133975
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:1.725393, valid_loss:1.185157
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:1.724385, valid_loss:1.110543
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:1.696487, valid_loss:1.071147
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:1.659152, valid_loss:1.203680
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:1.691732, valid_loss:1.164200
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:1.672700, valid_loss:1.133662
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:1.663899, valid_loss:1.270971
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:1.632475, valid_loss:1.075949
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:1.635194, valid_loss:1.059800
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:1.616441, valid_loss:1.092621
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:1.607535, valid_loss:1.195272
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:1.595632, valid_loss:1.001738
INFO:00_train.py:
 success:fan 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/fan_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: pump
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:808.902540, valid_loss:680.400163
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:463.530555, valid_loss:297.247693
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:163.678925, valid_loss:73.601608
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:34.579151, valid_loss:14.180422
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:9.200926, valid_loss:5.881356
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:6.455203, valid_loss:5.370560
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:5.932702, valid_loss:4.769123
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:5.625530, valid_loss:4.602492
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:5.306671, valid_loss:4.286961
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:4.944683, valid_loss:3.985354
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:4.688166, valid_loss:3.784414
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:4.507064, valid_loss:3.749273
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:4.331010, valid_loss:3.505809
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:4.191517, valid_loss:3.240631
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:4.031760, valid_loss:3.361305
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:3.974818, valid_loss:2.835246
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:3.686370, valid_loss:2.853348
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:3.481553, valid_loss:2.595309
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:3.394142, valid_loss:2.461220
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:3.329214, valid_loss:2.424380
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:3.241453, valid_loss:2.452428
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:3.073961, valid_loss:2.204951
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:3.038099, valid_loss:2.267114
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:2.983964, valid_loss:2.096716
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:2.890491, valid_loss:1.908195
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:2.848908, valid_loss:2.063241
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:2.780958, valid_loss:1.872463
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:2.747879, valid_loss:1.776722
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.627925, valid_loss:1.703992
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.604824, valid_loss:1.685192
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.578083, valid_loss:1.822820
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.553037, valid_loss:1.699383
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.495418, valid_loss:1.607956
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.479808, valid_loss:1.628941
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.393883, valid_loss:1.541038
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:2.352218, valid_loss:1.457028
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:2.346654, valid_loss:1.545134
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:2.300835, valid_loss:1.451229
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:2.263593, valid_loss:1.449767
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:2.296011, valid_loss:1.365655
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:2.298948, valid_loss:1.314807
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:2.271944, valid_loss:1.301544
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:2.166431, valid_loss:1.294505
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:2.134482, valid_loss:1.282292
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:2.134208, valid_loss:1.242394
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:2.083858, valid_loss:1.213886
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:2.122258, valid_loss:1.192656
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:2.070136, valid_loss:1.238070
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:2.089526, valid_loss:1.084270
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:2.036526, valid_loss:1.309155
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:2.018456, valid_loss:1.259203
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:5] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:2.014671, valid_loss:1.114986
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:1.993398, valid_loss:1.063934
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:1.963741, valid_loss:1.121995
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13320bc390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13320bc390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331b1d9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331b1d9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:1.951474, valid_loss:1.057755
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331746110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331746110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f132817d650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f132817d650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f132807a710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f132807a710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13200e0250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13200e0250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f795090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f795090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f6a2610>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f6a2610>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f5a6510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f5a6510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f494b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f494b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130e7a2f90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130e7a2f90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f7031d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f130f7031d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:1.947355, valid_loss:1.118893
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331acf0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f1331acf0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13324288d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f13324288d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:1.991755, valid_loss:1.083212
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:1.922496, valid_loss:1.043643
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:1.941969, valid_loss:1.040643
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:1.873180, valid_loss:1.053777
INFO:00_train.py:
 success:pump 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/pump_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:914.121524, valid_loss:735.341338
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:594.051776, valid_loss:391.398654
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:276.699136, valid_loss:148.032801
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:87.377269, valid_loss:38.040207
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:20.989268, valid_loss:8.973009
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:8.437629, valid_loss:6.323579
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:6.619870, valid_loss:5.592972
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:6.248154, valid_loss:5.322865
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:5.865029, valid_loss:5.000129
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:5.540314, valid_loss:4.496988
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:5.103426, valid_loss:4.227631
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:4.796082, valid_loss:4.145376
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:4.628729, valid_loss:3.952018
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:931.567361, valid_loss:734.005614
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:589.972745, valid_loss:384.945339
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:268.306623, valid_loss:142.392866
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:84.166467, valid_loss:36.953697
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:21.821981, valid_loss:10.093300
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:8.955702, valid_loss:6.467735
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:6.795725, valid_loss:6.114242
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:6.365709, valid_loss:5.487771
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:6.077984, valid_loss:5.375294
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:5.816114, valid_loss:5.252543
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:5.455375, valid_loss:4.751250
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:5.182810, valid_loss:4.547850
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:4.844710, valid_loss:4.287392
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:4.650826, valid_loss:4.223440
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:4.539698, valid_loss:3.816602
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:4.280569, valid_loss:3.868116
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:4.197067, valid_loss:3.408619
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:3.992124, valid_loss:3.505240
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:3.817739, valid_loss:3.237495
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:3.689849, valid_loss:3.222746
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:3.562356, valid_loss:2.978364
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:3.533598, valid_loss:2.862609
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:3.350015, valid_loss:2.683289
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:3.316038, valid_loss:2.598543
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:3.229084, valid_loss:2.593185
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:3.154247, valid_loss:2.630560
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:3.111466, valid_loss:2.450641
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:3.090183, valid_loss:2.355279
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.983555, valid_loss:2.272891
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.965546, valid_loss:2.290178
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.870373, valid_loss:2.377389
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.808545, valid_loss:2.398913
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.782826, valid_loss:2.251727
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.731870, valid_loss:2.231394
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.675600, valid_loss:2.190128
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:2.649699, valid_loss:2.067303
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:2.642284, valid_loss:2.182892
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:2.566160, valid_loss:2.107989
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:2.537570, valid_loss:2.036777
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:2.489355, valid_loss:1.804384
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:2.465462, valid_loss:2.086523
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:2.476006, valid_loss:1.832346
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:2.436265, valid_loss:2.017446
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:2.350905, valid_loss:1.813740
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:2.323613, valid_loss:1.830409
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:2.341350, valid_loss:1.776392
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:2.309774, valid_loss:1.946307
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:2.283600, valid_loss:1.679560
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:2.247504, valid_loss:1.863581
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:2.198438, valid_loss:1.745386
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:2.237395, valid_loss:1.761578
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:2.164468, valid_loss:1.751783
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:2.225149, valid_loss:1.460681
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:2.182331, valid_loss:1.682888
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:2.103912, valid_loss:1.649729
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:2.162550, valid_loss:1.525617
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:2.128989, valid_loss:1.605837
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:2.075327, valid_loss:1.639532
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:2.085807, valid_loss:1.625617
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:2.099647, valid_loss:1.507910
INFO:00_train.py:
 success:slider 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/slider_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: ToyCar
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:788.573801, valid_loss:556.856386
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:358.830591, valid_loss:169.013480
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:89.315313, valid_loss:29.965331
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:18.004179, valid_loss:7.358025
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:7.838821, valid_loss:6.193539
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:6.806770, valid_loss:5.369796
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:5.979926, valid_loss:4.507516
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:5.406329, valid_loss:4.389513
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:4.977111, valid_loss:3.790158
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:4.733308, valid_loss:3.573230
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:4.511179, valid_loss:3.607060
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:4.328705, valid_loss:3.306648
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:4.100403, valid_loss:2.869747
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:3.857289, valid_loss:3.079795
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:3.712555, valid_loss:2.564746
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:3.561112, valid_loss:2.777994
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:3.478523, valid_loss:2.568048
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:3.416440, valid_loss:2.196190
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:3.235014, valid_loss:2.067841
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:3.126465, valid_loss:1.954818
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:2.995433, valid_loss:1.883066
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:3.000437, valid_loss:2.099259
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:2.944538, valid_loss:2.116190
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:2.915887, valid_loss:1.774017
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:2.770534, valid_loss:1.753836
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:2.638494, valid_loss:1.635227
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:2.746533, valid_loss:1.728955
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:2.604076, valid_loss:1.520591
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.616179, valid_loss:1.954294
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.590613, valid_loss:1.875606
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.481485, valid_loss:1.571088
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.385133, valid_loss:1.452345
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.407344, valid_loss:1.676849
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.350058, valid_loss:1.500412
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.292575, valid_loss:1.488229
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:2.381908, valid_loss:1.360167
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:2.278410, valid_loss:1.393431
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:2.366105, valid_loss:2.133742
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:2.222532, valid_loss:1.378171
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:2.246651, valid_loss:1.559482
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:2.141108, valid_loss:1.409268
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:2.110982, valid_loss:1.494039
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:2.130999, valid_loss:1.498073
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:2.139913, valid_loss:1.592455
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:2.133817, valid_loss:1.417120
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:1.995801, valid_loss:1.126210
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:2.019311, valid_loss:1.350412
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:2.004461, valid_loss:1.313146
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:2.019828, valid_loss:1.228715
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:1.927796, valid_loss:1.550857
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:1.893901, valid_loss:1.226702
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:1.890686, valid_loss:1.145178
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:1.879270, valid_loss:1.374150
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:1.827966, valid_loss:1.477103
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:1.894380, valid_loss:1.691362
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:1.856568, valid_loss:1.193540
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:1.839136, valid_loss:1.335500
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:1.845934, valid_loss:1.410571
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:1.817347, valid_loss:1.404082
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:1.780728, valid_loss:1.432913
INFO:00_train.py:
 success:ToyCar 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/ToyCar_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: ToyConveyor
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:400.533758, valid_loss:252.955950
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:169.298498, valid_loss:79.169537
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:44.520414, valid_loss:21.029748
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:14.533511, valid_loss:9.478478
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:8.023347, valid_loss:5.752469
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:6.029670, valid_loss:4.478398
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:5.263507, valid_loss:4.059310
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:4.776271, valid_loss:3.806615
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:4.644414, valid_loss:3.411162
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:4.274764, valid_loss:3.129285
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:4.219682, valid_loss:2.876508
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:3.875440, valid_loss:2.773504
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:3.761508, valid_loss:2.557639
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:3.660771, valid_loss:2.409757
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:3.464859, valid_loss:2.303632
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:3.440294, valid_loss:2.117552
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:3.282532, valid_loss:2.068124
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:3.248287, valid_loss:2.024237
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:3.140539, valid_loss:1.821377
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:3.151041, valid_loss:2.185182
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:3.082646, valid_loss:1.926060
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:2.909460, valid_loss:1.920039
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:2.870243, valid_loss:1.877909
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:2.828601, valid_loss:1.631633
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:2.792108, valid_loss:1.577343
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:2.704541, valid_loss:1.651427
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:2.598879, valid_loss:1.618454
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:2.601223, valid_loss:1.461260
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.616502, valid_loss:1.442030
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.580744, valid_loss:1.375772
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.577277, valid_loss:1.349457
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.475030, valid_loss:1.372957
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.476600, valid_loss:1.339464
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.468877, valid_loss:1.263931
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.383325, valid_loss:1.229462
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:2.361004, valid_loss:1.120861
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:2.435067, valid_loss:1.311868
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:2.333943, valid_loss:1.293144
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:2.265480, valid_loss:1.197305
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:2.349754, valid_loss:1.467877
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:2.332327, valid_loss:1.240434
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:2.359413, valid_loss:1.561906
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:2.192601, valid_loss:1.370401
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:2.218747, valid_loss:1.007878
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:2.208356, valid_loss:1.111164
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:2.163566, valid_loss:1.025758
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:2.149531, valid_loss:1.218851
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:2.213024, valid_loss:1.238202
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:2.107136, valid_loss:0.999190
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:2.084688, valid_loss:1.111598
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:2.081241, valid_loss:1.410658
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:2.174623, valid_loss:1.347090
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:2.116151, valid_loss:1.226431
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:2.000118, valid_loss:1.240920
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:2.099364, valid_loss:0.978089
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:2.050491, valid_loss:1.358509
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:2.132848, valid_loss:1.102594
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:2.011556, valid_loss:1.015635
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:1.945190, valid_loss:1.244171
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:1.957127, valid_loss:1.281453
INFO:00_train.py:
 success:ToyConveyor 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/ToyConveyor_model.pth
INFO:00_train.py:TARGET MACHINE_TYPE: valve
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:900.658391, valid_loss:725.738484
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:554.540929, valid_loss:362.037938
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:225.456259, valid_loss:101.666379
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:49.092117, valid_loss:16.380201
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:11.200817, valid_loss:6.580673
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:7.091052, valid_loss:5.693611
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:6.419401, valid_loss:5.244879
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:5.946242, valid_loss:4.839131
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:5.493046, valid_loss:4.341354
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:5.101735, valid_loss:3.961681
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:4.756009, valid_loss:3.693942
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:4.516544, valid_loss:3.455058
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:4.347440, valid_loss:3.316440
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:4.168170, valid_loss:3.176122
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:4.056050, valid_loss:2.986664
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:3.796747, valid_loss:2.883813
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:3.682121, valid_loss:2.690841
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:3.491812, valid_loss:2.543319
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:3.425837, valid_loss:2.387195
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:3.360748, valid_loss:2.344493
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:3.250084, valid_loss:2.208070
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:3.102346, valid_loss:2.151174
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:3.088241, valid_loss:2.184670
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:3.012291, valid_loss:2.112113
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:2.910579, valid_loss:2.093367
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:2.922369, valid_loss:1.967291
INFO:pytorch_modeler.py:Epoch 27/60:train_loss:2.814128, valid_loss:1.949555
INFO:pytorch_modeler.py:Epoch 28/60:train_loss:2.742718, valid_loss:1.787609
INFO:pytorch_modeler.py:Epoch 29/60:train_loss:2.697320, valid_loss:1.749417
INFO:pytorch_modeler.py:Epoch 30/60:train_loss:2.614041, valid_loss:1.748855
INFO:pytorch_modeler.py:Epoch 31/60:train_loss:2.629171, valid_loss:1.636186
INFO:pytorch_modeler.py:Epoch 32/60:train_loss:2.551701, valid_loss:1.685520
INFO:pytorch_modeler.py:Epoch 33/60:train_loss:2.511177, valid_loss:1.720648
INFO:pytorch_modeler.py:Epoch 34/60:train_loss:2.510244, valid_loss:1.572500
INFO:pytorch_modeler.py:Epoch 35/60:train_loss:2.421851, valid_loss:1.471344
INFO:pytorch_modeler.py:Epoch 36/60:train_loss:2.386875, valid_loss:1.583821
INFO:pytorch_modeler.py:Epoch 37/60:train_loss:2.372129, valid_loss:1.453792
INFO:pytorch_modeler.py:Epoch 38/60:train_loss:2.328125, valid_loss:1.380329
INFO:pytorch_modeler.py:Epoch 39/60:train_loss:2.307104, valid_loss:1.451536
INFO:pytorch_modeler.py:Epoch 40/60:train_loss:2.252054, valid_loss:1.313571
INFO:pytorch_modeler.py:Epoch 41/60:train_loss:2.211268, valid_loss:1.477344
INFO:pytorch_modeler.py:Epoch 42/60:train_loss:2.179370, valid_loss:1.371834
INFO:pytorch_modeler.py:Epoch 43/60:train_loss:2.109638, valid_loss:1.265871
INFO:pytorch_modeler.py:Epoch 44/60:train_loss:2.124941, valid_loss:1.231117
INFO:pytorch_modeler.py:Epoch 45/60:train_loss:2.068236, valid_loss:1.240100
INFO:pytorch_modeler.py:Epoch 46/60:train_loss:2.111850, valid_loss:1.202033
INFO:pytorch_modeler.py:Epoch 47/60:train_loss:2.056601, valid_loss:1.234247
INFO:pytorch_modeler.py:Epoch 48/60:train_loss:2.046407, valid_loss:1.183257
INFO:pytorch_modeler.py:Epoch 49/60:train_loss:2.010705, valid_loss:1.238662
INFO:pytorch_modeler.py:Epoch 50/60:train_loss:2.012710, valid_loss:1.195481
INFO:pytorch_modeler.py:Epoch 51/60:train_loss:1.981236, valid_loss:1.131747
INFO:pytorch_modeler.py:Epoch 52/60:train_loss:1.955112, valid_loss:1.154097
INFO:pytorch_modeler.py:Epoch 53/60:train_loss:1.947363, valid_loss:1.192094
INFO:pytorch_modeler.py:Epoch 54/60:train_loss:1.926724, valid_loss:1.175034
INFO:pytorch_modeler.py:Epoch 55/60:train_loss:1.895802, valid_loss:1.166915
INFO:pytorch_modeler.py:Epoch 56/60:train_loss:1.869597, valid_loss:1.242505
INFO:pytorch_modeler.py:Epoch 57/60:train_loss:1.862428, valid_loss:1.203935
INFO:pytorch_modeler.py:Epoch 58/60:train_loss:1.867344, valid_loss:1.242861
INFO:pytorch_modeler.py:Epoch 59/60:train_loss:1.829433, valid_loss:1.127793
INFO:pytorch_modeler.py:Epoch 60/60:train_loss:1.834324, valid_loss:1.174071
INFO:00_train.py:
 success:valve 
model_out_path ==> 
 /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/models/valve_model.pth
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e418550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e418550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e22b1d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e22b1d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0bfd50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0bfd50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24bb8f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24bb8f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24ab0310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24ab0310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2499a490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2499a490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24012ad0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24012ad0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20f02b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20f02b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20e0af10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20e0af10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20d6c050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20d6c050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20c6b3d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20c6b3d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20b5ab50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20b5ab50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20fcbdd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20fcbdd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e478f50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e478f50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e2d45d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e2d45d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20c40f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20c40f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1fdc90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1fdc90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20f4bd50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20f4bd50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24a26050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24a26050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24ac3150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24ac3150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20d8a6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20d8a6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0c1290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0c1290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1bba50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1bba50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20aae610>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20aae610>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20eafad0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20eafad0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e168110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e168110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d249f6a10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d249f6a10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24a61110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24a61110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1a1b90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e1a1b90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20ec4690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20ec4690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20e22250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d20e22250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0a4dd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2e0a4dd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24b74050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24b74050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24036650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d24036650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/base.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/calibration.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/cluster/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/compose/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/conftest.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/covariance/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/cross_decomposition/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/datasets/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/decomposition/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/discriminant_analysis.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/dummy.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/exceptions.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/experimental/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/externals/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/feature_extraction/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/feature_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/gaussian_process/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/impute/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/inspection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/isotonic.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/kernel_approximation.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/kernel_ridge.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/manifold/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/metrics/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/mixture/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/model_selection/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/multioutput.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/naive_bayes.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/neighbors/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/neural_network/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/pipeline.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/preprocessing/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/random_projection.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/semi_supervised/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/setup.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/svm/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/tests/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/tree/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/utils/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/metrics/_classification.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/functools.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/functools.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/metrics/cluster/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/sklearn/metrics/cluster/_supervised.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 4
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:4] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/functional.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/tensor.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/types.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_tensor_docs.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/numpy/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 3
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:3]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:3] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 4
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:4] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 4
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 2 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:5] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2df7bb50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2df7bb50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2dcb01d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2dcb01d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2db53310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2db53310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2da111d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2da111d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2d968a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2d968a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2d8571d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9d2d8571d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/eval_functions.py
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 124; new: 125
DEBUG:parso.python.diff:-> code[equal] old[1:56] new[1:56]
DEBUG:parso.python.diff:copy old[4:52] new[1:52]
DEBUG:parso.python.diff:parse_part from 53 to 54 (to 54 in part parser)
DEBUG:parso.python.diff:parse_part from 55 to 125 (to 124 in part parser)
DEBUG:parso.python.diff:-> code[insert] old[57:56] new[57:57]
DEBUG:parso.python.diff:-> code[equal] old[57:124] new[58:125]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 52
DEBUG:parso.python.diff:-> code[equal] old[1:51] new[1:51]
DEBUG:parso.python.diff:copy old[1:51] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 52 (to 51 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[52:52] new[52:52]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 52; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:52] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/common.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/util/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/util/exceptions.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/time_frequency.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/audio.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/spectrum.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/pitch.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/constantq.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/harmonic.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/librosa/core/fft.py
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[1:69] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 74
DEBUG:parso.python.diff:-> code[equal] old[1:73] new[1:73]
DEBUG:parso.python.diff:copy old[1:73] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 74 (to 73 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[74:74] new[74:74]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 74; new: 4
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[3:3] new[2:2]
DEBUG:parso.python.diff:parse_part from 2 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:-> code[delete] old[4:5] new[3:2]
DEBUG:parso.python.diff:-> code[equal] old[6:6] new[3:3]
DEBUG:parso.python.diff:-> code[replace] old[7:74] new[4:4]
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/_VariableFunctions.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/functional.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/tensor.py
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 76
DEBUG:parso.python.diff:-> code[equal] old[1:75] new[1:75]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 76 (to 75 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[76:76] new[76:76]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/_VariableFunctions.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/functional.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/tensor.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 76
DEBUG:parso.python.diff:-> code[equal] old[1:75] new[1:75]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 76 (to 75 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[76:76] new[76:76]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 76
DEBUG:parso.python.diff:-> code[equal] old[1:75] new[1:75]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 76 (to 75 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[76:76] new[76:76]
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 71
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 71 (to 70 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:71]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 71; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:70] new[1:70]
DEBUG:parso.python.diff:copy old[1:70] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[71:71] new[71:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 73; new: 73
DEBUG:parso.python.diff:-> code[equal] old[1:72] new[1:72]
DEBUG:parso.python.diff:copy old[1:72] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 73 (to 72 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[73:73] new[73:73]
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 76
DEBUG:parso.python.diff:-> code[equal] old[1:75] new[1:75]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 76 (to 75 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[76:76] new[76:76]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 76
DEBUG:parso.python.diff:-> code[equal] old[1:74] new[1:74]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 76 (to 75 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[75:76] new[75:76]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 76; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:75] new[1:75]
DEBUG:parso.python.diff:copy old[1:75] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[76:76] new[76:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/pytorch_model.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/__init__.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/_C/_VariableFunctions.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/functional.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/torch/tensor.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:74] new[1:74]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[delete] old[75:75] new[75:74]
DEBUG:parso.python.diff:-> code[equal] old[76:76] new[75:75]
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[76:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:77] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:78] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[1:81] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[1:81] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5014001138303927
INFO: :pAUC : 0.5169397597579606
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.4974943310657596
INFO: :pAUC : 0.5178422246091419
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.501326530612245
INFO: :pAUC : 0.5164100728010502
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_04.csv
INFO: :AUC : 0.4938095238095238
INFO: :pAUC : 0.5162907268170426
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[2/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_01
INFO: :test_file  num : 1181
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_01.csv
INFO: :AUC : 0.5330905511811024
INFO: :pAUC : 0.5023656582400884
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_02
INFO: :test_file  num : 1136
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_02.csv
INFO: :AUC : 0.5406212797619048
INFO: :pAUC : 0.5007244674185464
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_03
INFO: :test_file  num : 1135
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_03.csv
INFO: :AUC : 0.5559963347040944
INFO: :pAUC : 0.5084982481234375
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[3/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_00
INFO: :test_file  num : 489
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.46737789203084834
INFO: :pAUC : 0.4895142741171695
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_02
INFO: :test_file  num : 441
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.6102932551319649
INFO: :pAUC : 0.5525544065442198
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_04
INFO: :test_file  num : 430
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.463939393939394
INFO: :pAUC : 0.49186602870813395
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_06
INFO: :test_file  num : 443
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5262973760932944
INFO: :pAUC : 0.4905631425502532
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[4/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_00
INFO: :test_file  num : 237
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_00.csv
INFO: :AUC : 0.7633576642335765
INFO: :pAUC : 0.6262005378409528
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_02
INFO: :test_file  num : 205
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_02.csv
INFO: :AUC : 0.628095238095238
INFO: :pAUC : 0.5939849624060151
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_04
INFO: :test_file  num : 194
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_04.csv
INFO: :AUC : 0.771595744680851
INFO: :pAUC : 0.5565509518477043
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_06
INFO: :test_file  num : 196
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_06.csv
INFO: :AUC : 0.6270833333333334
INFO: :pAUC : 0.5685307017543859
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[5/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_00
INFO: :test_file  num : 445
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_00.csv
INFO: :AUC : 0.930086956521739
INFO: :pAUC : 0.7244851258581236
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_02
INFO: :test_file  num : 356
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_02.csv
INFO: :AUC : 0.7395703125
INFO: :pAUC : 0.563733552631579
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_04
INFO: :test_file  num : 267
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_04.csv
INFO: :AUC : 0.788443113772455
INFO: :pAUC : 0.5884021430822566
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_06
INFO: :test_file  num : 178
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_06.csv
INFO: :AUC : 0.42192307692307696
INFO: :pAUC : 0.4790823211875843
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[6/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_00
INFO: :test_file  num : 213
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_00.csv
INFO: :AUC : 0.4716814159292036
INFO: :pAUC : 0.49417792268281324
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_02
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_02.csv
INFO: :AUC : 0.7435087719298245
INFO: :pAUC : 0.5392428439519852
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_04
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_04.csv
INFO: :AUC : 0.6286842105263157
INFO: :pAUC : 0.5240073868882733
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_06
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_06.csv
INFO: :AUC : 0.3935087719298246
INFO: :pAUC : 0.48799630655586335
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :AUC and pAUC results -> /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/result.csv
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:81] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:-> code[equal] old[78:81] new[78:81]
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 120
DEBUG:parso.python.diff:-> code[equal] old[1:119] new[1:119]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 120 (to 119 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[120:120] new[120:120]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /media/hiroki/working/research/dcase2020/2D_codes/Convolutional_AE/eval_functions.py
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5014001138303927
INFO: :pAUC : 0.5169397597579606
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.4974943310657596
INFO: :pAUC : 0.5178422246091419
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.501326530612245
INFO: :pAUC : 0.5164100728010502
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_04.csv
INFO: :AUC : 0.4938095238095238
INFO: :pAUC : 0.5162907268170426
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[2/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_01
INFO: :test_file  num : 1181
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_01.csv
INFO: :AUC : 0.5330905511811024
INFO: :pAUC : 0.5023656582400884
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_02
INFO: :test_file  num : 1136
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_02.csv
INFO: :AUC : 0.5406212797619048
INFO: :pAUC : 0.5007244674185464
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_03
INFO: :test_file  num : 1135
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_03.csv
INFO: :AUC : 0.5559963347040944
INFO: :pAUC : 0.5084982481234375
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[3/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_00
INFO: :test_file  num : 489
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.46737789203084834
INFO: :pAUC : 0.4895142741171695
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_02
INFO: :test_file  num : 441
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.6102932551319649
INFO: :pAUC : 0.5525544065442198
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_04
INFO: :test_file  num : 430
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.463939393939394
INFO: :pAUC : 0.49186602870813395
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_06
INFO: :test_file  num : 443
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5262973760932944
INFO: :pAUC : 0.4905631425502532
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[4/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_00
INFO: :test_file  num : 237
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_00.csv
INFO: :AUC : 0.7633576642335765
INFO: :pAUC : 0.6262005378409528
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_02
INFO: :test_file  num : 205
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_02.csv
INFO: :AUC : 0.628095238095238
INFO: :pAUC : 0.5939849624060151
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_04
INFO: :test_file  num : 194
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_04.csv
INFO: :AUC : 0.771595744680851
INFO: :pAUC : 0.5565509518477043
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_06
INFO: :test_file  num : 196
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_06.csv
INFO: :AUC : 0.6270833333333334
INFO: :pAUC : 0.5685307017543859
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[5/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_00
INFO: :test_file  num : 445
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_00.csv
INFO: :AUC : 0.930086956521739
INFO: :pAUC : 0.7244851258581236
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_02
INFO: :test_file  num : 356
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_02.csv
INFO: :AUC : 0.7395703125
INFO: :pAUC : 0.563733552631579
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_04
INFO: :test_file  num : 267
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_04.csv
INFO: :AUC : 0.788443113772455
INFO: :pAUC : 0.5884021430822566
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_06
INFO: :test_file  num : 178
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_06.csv
INFO: :AUC : 0.42192307692307696
INFO: :pAUC : 0.4790823211875843
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[6/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_00
INFO: :test_file  num : 213
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_00.csv
INFO: :AUC : 0.4716814159292036
INFO: :pAUC : 0.49417792268281324
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_02
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_02.csv
INFO: :AUC : 0.7435087719298245
INFO: :pAUC : 0.5392428439519852
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_04
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_04.csv
INFO: :AUC : 0.6286842105263157
INFO: :pAUC : 0.5240073868882733
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_06
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_06.csv
INFO: :AUC : 0.3935087719298246
INFO: :pAUC : 0.48799630655586335
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :AUC and pAUC results -> /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/result.csv
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 120; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:119] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:120] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 77
DEBUG:parso.python.diff:-> code[equal] old[1:76] new[1:76]
DEBUG:parso.python.diff:copy old[1:76] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 77 (to 76 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[77:77] new[77:77]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 77; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:77] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5014001138303927
INFO: :pAUC : 0.5169397597579606
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.4974943310657596
INFO: :pAUC : 0.5178422246091419
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.501326530612245
INFO: :pAUC : 0.5164100728010502
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_04.csv
INFO: :AUC : 0.4938095238095238
INFO: :pAUC : 0.5162907268170426
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[2/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_01
INFO: :test_file  num : 1181
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_01.csv
INFO: :AUC : 0.5330905511811024
INFO: :pAUC : 0.5023656582400884
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_02
INFO: :test_file  num : 1136
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_02.csv
INFO: :AUC : 0.5406212797619048
INFO: :pAUC : 0.5007244674185464
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_03
INFO: :test_file  num : 1135
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_03.csv
INFO: :AUC : 0.5559963347040944
INFO: :pAUC : 0.5084982481234375
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[3/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_00
INFO: :test_file  num : 489
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.46737789203084834
INFO: :pAUC : 0.4895142741171695
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_02
INFO: :test_file  num : 441
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.6102932551319649
INFO: :pAUC : 0.5525544065442198
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_04
INFO: :test_file  num : 430
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.463939393939394
INFO: :pAUC : 0.49186602870813395
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_06
INFO: :test_file  num : 443
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5262973760932944
INFO: :pAUC : 0.4905631425502532
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[4/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_00
INFO: :test_file  num : 237
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_00.csv
INFO: :AUC : 0.7633576642335765
INFO: :pAUC : 0.6262005378409528
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_02
INFO: :test_file  num : 205
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_02.csv
INFO: :AUC : 0.628095238095238
INFO: :pAUC : 0.5939849624060151
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_04
INFO: :test_file  num : 194
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_04.csv
INFO: :AUC : 0.771595744680851
INFO: :pAUC : 0.5565509518477043
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_06
INFO: :test_file  num : 196
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_06.csv
INFO: :AUC : 0.6270833333333334
INFO: :pAUC : 0.5685307017543859
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[5/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_00
INFO: :test_file  num : 445
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_00.csv
INFO: :AUC : 0.930086956521739
INFO: :pAUC : 0.7244851258581236
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_02
INFO: :test_file  num : 356
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_02.csv
INFO: :AUC : 0.7395703125
INFO: :pAUC : 0.563733552631579
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_04
INFO: :test_file  num : 267
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_04.csv
INFO: :AUC : 0.788443113772455
INFO: :pAUC : 0.5884021430822566
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_06
INFO: :test_file  num : 178
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_06.csv
INFO: :AUC : 0.42192307692307696
INFO: :pAUC : 0.4790823211875843
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[6/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_00
INFO: :test_file  num : 213
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_00.csv
INFO: :AUC : 0.4716814159292036
INFO: :pAUC : 0.49417792268281324
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_02
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_02.csv
INFO: :AUC : 0.7435087719298245
INFO: :pAUC : 0.5392428439519852
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_04
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_04.csv
INFO: :AUC : 0.6286842105263157
INFO: :pAUC : 0.5240073868882733
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_06
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_06.csv
INFO: :AUC : 0.3935087719298246
INFO: :pAUC : 0.48799630655586335
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :AUC and pAUC results -> /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/result.csv
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 78
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:78]
DEBUG:parso.python.diff:parse_part from 1 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 24
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:10]
DEBUG:parso.python.diff:parse_part from 1 to 16 (to 16 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[3:3] new[11:11]
DEBUG:parso.python.diff:-> code[delete] old[4:5] new[12:11]
DEBUG:parso.python.diff:-> code[equal] old[6:6] new[12:12]
DEBUG:parso.python.diff:-> code[replace] old[7:79] new[13:24]
DEBUG:parso.python.diff:parse_part from 17 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 13
DEBUG:parso.python.diff:-> code[replace] old[1:10] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[11:11] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 5 (to 7 in part parser)
DEBUG:parso.python.diff:-> code[insert] old[12:11] new[4:5]
DEBUG:parso.python.diff:-> code[equal] old[12:12] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 8 (to 10 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:24] new[7:13]
DEBUG:parso.python.diff:parse_part from 9 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/collections/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/collections/__init__.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 13
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 13 (to 12 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:13]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 13; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:12] new[1:12]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[13:13] new[13:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:81] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 26
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:26]
DEBUG:parso.python.diff:parse_part from 1 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 2
DEBUG:parso.python.diff:-> code[replace] old[1:26] new[1:2]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/seaborn/__init__.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 2
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 2 (to 1 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:2]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/seaborn/matrix.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[2:2] new[2:3]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/pyplot.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 3
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:3]
DEBUG:parso.python.diff:parse_part from 3 to 3 (to 2 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 3; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:2] new[1:2]
DEBUG:parso.python.diff:-> code[replace] old[3:3] new[3:4]
DEBUG:parso.python.diff:parse_part from 3 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:6]
DEBUG:parso.python.diff:parse_part from 4 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 6
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:6]
DEBUG:parso.python.diff:parse_part from 6 to 6 (to 5 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 6; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:5] new[1:5]
DEBUG:parso.python.diff:copy old[1:5] new[1:5]
DEBUG:parso.python.diff:-> code[replace] old[6:6] new[6:7]
DEBUG:parso.python.diff:parse_part from 6 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:7] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:4] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:5] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:7]
DEBUG:parso.python.diff:parse_part from 4 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/__init__.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/_pylab_helpers.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/abc.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:6] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:7] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:7]
DEBUG:parso.python.diff:parse_part from 5 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:6] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:7] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:7]
DEBUG:parso.python.diff:parse_part from 5 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 7
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:7]
DEBUG:parso.python.diff:parse_part from 7 to 7 (to 6 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 7; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:6] new[1:6]
DEBUG:parso.python.diff:copy old[1:6] new[1:6]
DEBUG:parso.python.diff:-> code[replace] old[7:7] new[7:8]
DEBUG:parso.python.diff:parse_part from 7 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:2] new[1:2]
DEBUG:parso.python.diff:copy old[1:7] new[1:2]
DEBUG:parso.python.diff:-> code[delete] old[3:3] new[3:2]
DEBUG:parso.python.diff:-> code[equal] old[4:4] new[3:3]
DEBUG:parso.python.diff:copy old[4:4] new[3:3]
DEBUG:parso.python.diff:-> code[replace] old[5:8] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 4
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:4]
DEBUG:parso.python.diff:parse_part from 4 to 4 (to 3 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 4; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:3] new[1:3]
DEBUG:parso.python.diff:copy old[1:3] new[1:3]
DEBUG:parso.python.diff:-> code[replace] old[4:4] new[4:8]
DEBUG:parso.python.diff:parse_part from 4 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 8
DEBUG:parso.python.diff:-> code[equal] old[1:7] new[1:7]
DEBUG:parso.python.diff:copy old[1:7] new[1:7]
DEBUG:parso.python.diff:-> code[replace] old[8:8] new[8:8]
DEBUG:parso.python.diff:parse_part from 8 to 8 (to 7 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 8; new: 78
DEBUG:parso.python.diff:-> code[replace] old[1:8] new[1:78]
DEBUG:parso.python.diff:parse_part from 1 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 9
DEBUG:parso.python.diff:-> code[replace] old[1:78] new[1:9]
DEBUG:parso.python.diff:parse_part from 1 to 9 (to 8 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 9; new: 16
DEBUG:parso.python.diff:-> code[replace] old[1:9] new[1:16]
DEBUG:parso.python.diff:parse_part from 1 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 16
DEBUG:parso.python.diff:-> code[equal] old[1:15] new[1:15]
DEBUG:parso.python.diff:copy old[5:15] new[1:15]
DEBUG:parso.python.diff:-> code[replace] old[16:16] new[16:16]
DEBUG:parso.python.diff:parse_part from 16 to 16 (to 15 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 16; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:16] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 82
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:82]
DEBUG:parso.python.diff:parse_part from 1 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/os.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/posixpath.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/types.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 78
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 78 (to 77 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:82] new[78:78]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 78; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:77] new[1:77]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[78:78] new[78:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:79] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 79
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:79]
DEBUG:parso.python.diff:parse_part from 1 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 79
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 79 (to 78 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:79]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 79; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[79:79] new[79:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:78] new[1:78]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[insert] old[79:78] new[79:82]
DEBUG:parso.python.diff:-> code[equal] old[79:79] new[83:83]
DEBUG:parso.python.diff:-> code[delete] old[80:83] new[84:83]
DEBUG:parso.python.diff:-> code[equal] old[84:84] new[84:84]
DEBUG:parso.python.diff:-> code[replace] old[85:86] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 88
DEBUG:parso.python.diff:-> code[equal] old[1:87] new[1:87]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 88 (to 87 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[88:88] new[88:88]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 88; new: 69
DEBUG:parso.python.diff:-> code[equal] old[1:68] new[1:68]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 69 (to 68 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[69:88] new[69:69]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 69; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:68] new[1:68]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[69:69] new[69:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 69
DEBUG:parso.python.diff:-> code[equal] old[1:68] new[1:68]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 69 (to 68 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[69:70] new[69:69]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 69; new: 70
DEBUG:parso.python.diff:-> code[equal] old[1:68] new[1:68]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 70 (to 69 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[69:69] new[69:70]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 70; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:69] new[1:69]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[70:70] new[70:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 87
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 87 (to 86 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:87]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 87; new: 87
DEBUG:parso.python.diff:-> code[equal] old[1:86] new[1:86]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 87 (to 86 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[87:87] new[87:87]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 87; new: 87
DEBUG:parso.python.diff:-> code[equal] old[1:86] new[1:86]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 87 (to 86 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[87:87] new[87:87]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 87; new: 92
DEBUG:parso.python.diff:-> code[equal] old[1:86] new[1:86]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 92 (to 91 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[87:87] new[87:92]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 92; new: 91
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 91 (to 90 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:92] new[91:91]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 91; new: 91
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 91 (to 90 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:91] new[91:91]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 91; new: 91
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 91 (to 90 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:91] new[91:91]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 91; new: 91
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 91 (to 90 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:91] new[91:91]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 91; new: 91
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 91 (to 90 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:91] new[91:91]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 91; new: 92
DEBUG:parso.python.diff:-> code[equal] old[1:90] new[1:90]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 92 (to 91 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[91:91] new[91:92]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:copy old[1:4] new[1:4]
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:parse_part from 5 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 81
DEBUG:parso.python.diff:-> code[replace] old[1:5] new[1:81]
DEBUG:parso.python.diff:parse_part from 1 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 18
DEBUG:parso.python.diff:-> code[replace] old[1:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 1 to 17 (to 17 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[12:13] new[12:13]
DEBUG:parso.python.diff:-> code[replace] old[14:82] new[14:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[4:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 81
DEBUG:parso.python.diff:-> code[replace] old[1:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 1 to 11 (to 14 in part parser)
DEBUG:parso.python.diff:-> code[equal] old[12:13] new[12:13]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[14:18] new[14:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:82]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:81] new[1:81]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[82:82] new[82:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 81
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 81 (to 80 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:83] new[81:81]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 81; new: 82
DEBUG:parso.python.diff:-> code[equal] old[1:80] new[1:80]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 82 (to 81 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[81:81] new[81:82]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce287a0d10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce287a0d10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28744510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28744510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000000.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce286c3690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce286c3690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2859f890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2859f890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000001.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2854a810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2854a810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2844a890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2844a890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000002.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28693e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28693e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2978c310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2978c310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000003.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce29265650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce29265650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28b0d290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28b0d290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000004.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce281b9550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce281b9550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce280c2b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce280c2b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000005.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22f9b250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22f9b250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22e99850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22e99850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000006.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22d9a0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22d9a0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22c9d6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22c9d6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000007.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22b9b150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22b9b150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22ab5d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce22ab5d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000008.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce229a7050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce229a7050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28cea0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce28cea0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000009.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce227a57d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce227a57d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce226ed9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce226ed9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000010.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce225d6550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce225d6550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce224d4b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce224d4b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000011.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce223d5f50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce223d5f50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce212c93d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce212c93d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000012.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce211b99d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce211b99d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce210d1710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce210d1710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000013.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20fd3850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20fd3850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20ed0050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20ed0050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000014.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20dce6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20dce6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20cd07d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20cd07d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000015.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20be5910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20be5910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20ae6d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20ae6d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000016.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce229408d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce229408d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce208cb090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce208cb090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000017.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce208207d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce208207d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2071c110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2071c110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000018.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce206136d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce206136d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2050f850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2050f850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000019.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2040f9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2040f9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20316950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20316950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000020.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2021ced0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce2021ced0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20110310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce20110310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000021.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4fb59d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4fb59d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4eb2590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4eb2590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000022.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4daa350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4daa350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4cb3990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4cb3990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000023.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4bc1c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4bc1c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4ab5290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4ab5290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000024.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf49ba390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf49ba390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce207a08d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fce207a08d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000025.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4804b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4804b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4708d10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4708d10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000026.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf45b7510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf45b7510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf44efb50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf44efb50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000027.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf43e7350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf43e7350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf42eb3d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf42eb3d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000028.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf41ec0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf41ec0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf40e7150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf40e7150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000029.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3fe9290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3fe9290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3eefa10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3eefa10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000030.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3df50d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3df50d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3cf3790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3cf3790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000031.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3bf60d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3bf60d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3b02ed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3b02ed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000032.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf39fe090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf39fe090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf39060d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf39060d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000033.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf380e390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf380e390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3718990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3718990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000034.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3610210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3610210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3518290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf3518290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000035.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4765510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf4765510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf179c310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf179c310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000036.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1650210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1650210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1598250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1598250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000037.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1498b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1498b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1395bd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1395bd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000038.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1287150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1287150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1193d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf1193d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000039.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf108e210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf108e210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0f93290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0f93290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000040.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0e9d3d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0e9d3d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0da5b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0da5b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000041.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0c98250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0c98250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0ba4350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0ba4350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000042.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0a9b490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf0a9b490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf09a8510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf09a8510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000043.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf08be650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf08be650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf07bb6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf07bb6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000044.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf06c6990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf06c6990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf05c9dd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf05c9dd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000045.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf04c0810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf04c0810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf03cf890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf03cf890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000046.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf02ce9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf02ce9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf01d4610>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf01d4610>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000047.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf34ac150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcdf34ac150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcde5f97650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcde5f97650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000048.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcde5ee6c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fcde5ee6c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 82; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:82] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35902fa950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35902fa950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35901e9090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35901e9090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35900c00d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35900c00d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d7b3250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d7b3250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d6dfc90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d6dfc90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d5d7890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d5d7890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d4c9350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d4c9350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d3cf710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d3cf710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d2b60d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d2b60d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d1c4490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d1c4490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d0cbf50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d0cbf50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d75e2d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d75e2d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357ceee710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357ceee710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cda8c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cda8c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cceea50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cceea50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cbece10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cbece10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cad46d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cad46d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c9c2b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c9c2b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c8e09d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c8e09d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c7ebd90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c7ebd90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c6ce7d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c6ce7d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c5e6c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c5e6c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d14b410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d14b410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c423d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c423d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c3191d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c3191d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c210390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c210390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c117f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c117f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3569493d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3569493d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356937e2d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356937e2d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356928a690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356928a690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356917c090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356917c090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356908df50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356908df50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568f8c310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568f8c310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568e8f6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568e8f6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c3b1210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c3b1210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568cc3490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568cc3490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568baf250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568baf250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568ac1610>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568ac1610>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35689b50d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35689b50d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35688d6f50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35688d6f50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35687b3350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35687b3350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35686b70d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35686b70d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35685b64d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35685b64d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35684c9a10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35684c9a10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35683b2350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35683b2350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35682cbc90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35682cbc90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35681cab10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35681cab10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35680d1f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35680d1f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bf7ed90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bf7ed90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3569010cd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3569010cd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bdb52d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bdb52d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bcbe150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bcbe150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bbbe850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bbbe850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bab8d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bab8d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b9a3090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b9a3090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b8a7690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b8a7690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b7b1f90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b7b1f90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b6afdd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b6afdd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b5bbb90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b5bbb90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b4bd9d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b4bd9d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b3b7150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b3b7150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b2bc2d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b2bc2d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b1cdd10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b1cdd10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b0b90d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b0b90d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355afd0a50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355afd0a50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aed3910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aed3910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355add7c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355add7c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c4b5ad0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c4b5ad0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355abda550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355abda550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ab157d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ab157d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa031d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa031d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a910d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a910d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a7f3790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a7f3790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a6fab50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a6fab50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a5fce90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a5fce90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a4f6450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a4f6450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558841890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558841890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558746790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558746790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558668b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558668b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355855a950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355855a950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355846acd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355846acd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355836cb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355836cb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558255050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558255050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558165410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3558165410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355806ce90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355806ce90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551f69cd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551f69cd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551e59050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551e59050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551d63050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551d63050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa8b6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa8b6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b604d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b604d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551aa36d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551aa36d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355199f950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355199f950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35518872d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35518872d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551786490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551786490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551697f10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551697f10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551599910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551599910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355149d710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355149d710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355139fc10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355139fc10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35512aef50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35512aef50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355119e390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355119e390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35510a06d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35510a06d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550fb3550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550fb3550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550eafa50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550eafa50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550dbb890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550dbb890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550cb3d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550cb3d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550bb8190>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550bb8190>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550abe590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550abe590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35509d2ed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35509d2ed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355089b810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355089b810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35507d9d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35507d9d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35506be0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35506be0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35505ce4d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35505ce4d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504d2dd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504d2dd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a84a450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a84a450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502fd150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502fd150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35501fe090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35501fe090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35500f9050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35500f9050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354fff60d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354fff60d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 1; new: 68
DEBUG:parso.python.diff:-> code[replace] old[1:1] new[1:68]
DEBUG:parso.python.diff:parse_part from 1 to 68 (to 67 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d030150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d030150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354ccf1b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354ccf1b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d741ed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d741ed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d4b32d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d4b32d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d108bd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d108bd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cfad590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cfad590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cabe550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cabe550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d8af910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d8af910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5011383039271485
INFO: :pAUC : 0.5011592210365177
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354c9a5690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354c9a5690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d6a8910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d6a8910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354e586b90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354e586b90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550536e90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550536e90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35511d7e50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35511d7e50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551ee9510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551ee9510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b00c650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b00c650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568c5d0d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568c5d0d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c794790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c794790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d108290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d108290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35903c8b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35903c8b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550914710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550914710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550960c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550960c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504305d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504305d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355067ba50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355067ba50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35503ab2d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35503ab2d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550d36090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550d36090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551ed2450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551ed2450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa37f50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa37f50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35507ed350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35507ed350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 68; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:66] new[1:66]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[67:68] new[67:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 83
DEBUG:parso.python.diff:-> code[equal] old[1:82] new[1:82]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 83 (to 82 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[83:83] new[83:83]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 83; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:83] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/os.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 49
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 49 (to 48 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:49]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 49; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:48] new[1:48]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[49:49] new[49:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 50
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 50 (to 49 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:50]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 50; new: 84
DEBUG:parso.python.diff:-> code[equal] old[1:49] new[1:49]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 84 (to 83 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[50:50] new[50:84]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 84; new: 84
DEBUG:parso.python.diff:-> code[equal] old[1:83] new[1:83]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 84 (to 83 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[84:84] new[84:84]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 84; new: 84
DEBUG:parso.python.diff:-> code[equal] old[1:83] new[1:83]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 84 (to 83 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[84:84] new[84:84]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 84; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:83] new[1:83]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[84:84] new[84:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 85
DEBUG:parso.python.diff:-> code[equal] old[1:84] new[1:84]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 85 (to 84 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[85:85] new[85:85]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3590220810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3590220810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550f537d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550f537d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000000.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac3fe50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac3fe50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356944c790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356944c790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000001.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cf48810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357cf48810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502fbf50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502fbf50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000002.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b23ff50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b23ff50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355142ee50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355142ee50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000003.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502b8ad0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35502b8ad0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354e5688d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354e5688d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000004.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b239e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355b239e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d39e910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d39e910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 85; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:83] new[1:83]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[84:85] new[84:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 86; new: 86
DEBUG:parso.python.diff:-> code[equal] old[1:85] new[1:85]
DEBUG:parso.python.diff:copy old[2:11] new[1:11]
DEBUG:parso.python.diff:parse_part from 12 to 86 (to 85 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[86:86] new[86:86]
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d8adb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d8adb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f359030b810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f359030b810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000000.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550d3bd10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550d3bd10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f359032c790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f359032c790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000001.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b3bb90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b3bb90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550e54990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550e54990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file broken!!: /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar/test/normal_id_01_00000002.wav
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35518392d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35518392d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550175090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550175090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551aefc50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551aefc50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac56290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac56290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cdaa590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cdaa590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550296110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550296110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355095c890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355095c890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ad26310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ad26310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bd39790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355bd39790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3590340dd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3590340dd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5011383039271485
INFO: :pAUC : 0.5011592210365177
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355034ed10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355034ed10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356890fe10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356890fe10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35693c2990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35693c2990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550e60310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550e60310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cd113d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354cd113d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d472590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357d472590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35903c8710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35903c8710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356900ab10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f356900ab10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d89bb90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354d89bb90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551afbed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551afbed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac62250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355ac62250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b20250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551b20250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355018d5d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355018d5d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551326090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551326090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355085c4d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355085c4d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550c3aa90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550c3aa90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355090b650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355090b650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550734c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550734c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568e0d750>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3568e0d750>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551d397d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551d397d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c77a1d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f357c77a1d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354c9c93d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f354c9c93d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551cb6410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3551cb6410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504d7350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f35504d7350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_04.csv
INFO: :AUC : 0.5010997732426304
INFO: :pAUC : 0.5010242148886173
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[2/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_01
INFO: :test_file  num : 1181
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa75710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355aa75710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550ca8090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550ca8090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550adeed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f3550adeed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a8be310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f355a8be310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
ERROR: :file_broken or not exists!! : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor/test/normal_id_01_00000736.wav
DEBUG:matplotlib:CONFIGDIR=/home/hiroki/.config/matplotlib
DEBUG:matplotlib:(private) matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:matplotlib data path: /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:loaded rc file /home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.2
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is linux
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_linux_x86_64-linux-gnu', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'autopep8', 'configparser', 'toml', 'toml.encoder', 'toml.decoder', 'toml.tz', 'pycodestyle', 'optparse', 'csv', '_csv', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'mkl', 'mkl._mklinit', 'mkl._py_mkl_service', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_20', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'multiprocessing.util', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', '_multiprocessing', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'psutil', 'psutil._common', 'psutil._compat', 'psutil._pslinux', 'psutil._psposix', 'psutil._psutil_linux', 'psutil._psutil_posix', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.multiclass', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'common', 'librosa', 'librosa.version', 'librosa._cache', 'librosa.core', 'librosa.core.time_frequency', 'librosa.util', 'librosa.util.utils', 'numba', 'numba._version', 'numba.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'llvmlite.six', 'pkg_resources', 'zipfile', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.errors', 'numba.six', 'numba._runtests', 'numba.types', 'numba.utils', 'numba.types.abstract', 'numba.types.containers', 'numba.types.common', 'numba.types.misc', 'numba.typeconv', 'numba.typeconv.castgraph', 'numba.types.functions', 'numba.types.iterators', 'numba.types.npytypes', 'numba.types.scalars', 'numba.npdatetime', 'numba.special', 'numba.typing', 'numba.typing.context', 'numba.typeconv.rules', 'numba.typeconv.typeconv', 'numba.typeconv._typeconv', 'numba.typing.templates', 'numba.targets', 'numba.targets.cpu_options', 'numba.typing.typeof', 'numba.numpy_support', 'numba.cgutils', 'numba.decorators', 'numba.sigutils', 'numba.targets.registry', 'numba.targets.cpu', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._dynfunc', 'numba.callwrapper', 'numba.targets.base', 'numba.funcdesc', 'numba.itanium_mangler', 'numba.debuginfo', 'numba._helperlib', 'numba.compiler_lock', 'numba.pythonapi', 'numba.ctypes_support', 'numba.lowering', 'numba.generators', 'numba.ir', 'numba.ir_utils', 'numba.analysis', 'numba.controlflow', 'numba.consts', 'numba.rewrites', 'numba.rewrites.registry', 'numba.rewrites.static_getitem', 'numba.rewrites.static_raise', 'numba.rewrites.static_binop', 'numba.rewrites.ir_print', 'numba.rewrites.macros', 'numba.targets.imputils', 'numba.targets.removerefctpass', 'numba.targets.arrayobj', 'numba.extending', 'numba.datamodel', 'numba.datamodel.manager', 'numba.datamodel.packer', 'numba.datamodel.registry', 'numba.datamodel.models', 'numba.targets.quicksort', 'numba.targets.mergesort', 'numba.targets.slicing', 'numba.six.moves', 'numba.targets.builtins', 'numba.typing.builtins', 'numba.parfor', 'numba.array_analysis', 'numba.typing.npydecl', 'numba.postproc', 'numba.transforms', 'numba.typeinfer', 'numba.stencilparfor', 'numba.targets.callconv', 'numba.targets.codegen', 'llvmlite.llvmpy.passes', 'numba.runtime', 'numba.runtime.nrt', 'numba.runtime.nrtdynmod', 'numba.runtime._nrt_python', 'numba.runtime.nrtopt', 'numba.targets.externals', 'numba.targets.intrinsics', 'numba.targets.listobj', 'numba.targets.setobj', 'numba.targets.dictimpl', 'numba.targets.options', 'numba.entrypoints', 'numba.targets.fastmathpass', 'numba.targets.descriptors', 'numba.dispatcher', 'numba._dispatcher', 'numba.compiler', 'numba.tracing', 'numba.bytecode', 'numba.interpreter', 'numba.dataflow', 'numba.byteflow', 'numba.unsafe', 'numba.unsafe.eh', 'numba.inline_closurecall', 'numba.targets.rangeobj', 'numba.unsafe.ndarray', 'numba.unsafe.tuple', 'numba.compiler_machinery', 'numba.untyped_passes', 'numba.typed_passes', 'numba.annotations', 'numba.annotations.type_annotations', 'numba.io_support', 'numba.object_mode_passes', 'numba.pylowering', 'numba.serialize', 'numba.caching', 'numba.appdirs', 'numba.stencil', 'numba.npyufunc', 'numba.npyufunc.decorators', 'numba.npyufunc._internal', 'numba.npyufunc.dufunc', 'numba.npyufunc.ufuncbuilder', 'numba.npyufunc.sigparse', 'numba.npyufunc.wrappers', 'numba.npyufunc.parallel', 'numba.npyufunc.array_exprs', 'numba.npyufunc.parfor', 'numba.jitclass', 'numba.jitclass.decorators', 'numba.jitclass.base', 'numba.jitclass._box', 'numba.jitclass.boxing', 'numba.withcontexts', 'numba.charseq', 'numba.unicode', 'numba.targets.hashing', 'numba.unsafe.bytes', 'numba.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.dictobject', 'numba.typedobjectutils', 'numba.targets.boxing', 'numba.typed.typedlist', 'numba.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'threadpoolctl', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'torch', 'torch._utils', 'torch._utils_internal', 'torch.version', 'torch._six', 'torch._C._onnx', 'torch._C._jit_tree_views', 'torch._C.cpp', 'torch._C.cpp.nn', 'torch._C._cudart', 'torch._C._nvtx', 'torch._C._cudnn', 'torch._C', 'torch.random', 'torch.serialization', 'tarfile', 'torch._tensor_str', 'torch.tensor', 'torch._namedtensor_internals', 'torch.utils', 'torch.utils.throughput_benchmark', 'torch.utils.hooks', 'torch.storage', 'torch.cuda', 'torch.cuda._utils', 'torch.types', 'torch.cuda.streams', 'torch.cuda.memory', 'torch.cuda.random', 'torch.cuda.sparse', 'torch.cuda.profiler', 'torch.cuda.nvtx', 'torch.cuda.amp', 'torch.cuda.amp.autocast_mode', 'torch.cuda.amp.grad_scaler', 'torch.sparse', 'torch.functional', 'torch.nn', 'torch.nn.modules', 'torch.nn.modules.module', 'torch.nn.parameter', 'torch.nn.modules.linear', 'torch.nn.functional', 'torch.nn._reduction', 'torch.nn.modules.utils', 'torch.nn.grad', 'torch._VF', 'torch._jit_internal', 'torch.distributed', 'torch.distributed.distributed_c10d', 'torch.distributed.constants', 'torch.distributed.rendezvous', 'torch.distributed.rpc', 'torch.distributed.rpc.api', 'torch.distributed.rpc.backend_registry', 'torch.distributed.rpc.constants', 'torch.distributed.rpc.internal', 'torch.distributed.rpc.functions', 'torch.distributed.rpc.server_process_global_profiler', 'torch.autograd', 'torch.autograd.variable', 'torch.autograd.function', 'torch.autograd.gradcheck', 'torch.testing', 'torch.autograd.grad_mode', 'torch.autograd.anomaly_mode', 'torch.autograd.profiler', 'torch.autograd.functional', 'torch.distributed.autograd', 'torch._overrides', 'torch.nn.init', 'torch.nn.modules.conv', 'torch.nn.common_types', 'torch.nn.modules.activation', 'torch.nn.modules.loss', 'torch.nn.modules.container', 'torch.nn.modules.pooling', 'torch.nn.modules.batchnorm', 'torch.nn.modules._functions', 'torch.nn.modules.instancenorm', 'torch.nn.modules.normalization', 'torch.nn.modules.dropout', 'torch.nn.modules.padding', 'torch.nn.modules.sparse', 'torch.nn.modules.rnn', 'torch.nn.utils', 'torch.nn.utils.rnn', 'torch.nn.utils.clip_grad', 'torch.nn.utils.weight_norm', 'torch.nn.utils.convert_parameters', 'torch.nn.utils.spectral_norm', 'torch.nn.utils.fusion', 'torch.nn.utils.memory_format', 'torch.nn.modules.pixelshuffle', 'torch.nn.modules.upsampling', 'torch.nn.modules.distance', 'torch.nn.modules.fold', 'torch.nn.modules.adaptive', 'torch.nn.modules.transformer', 'torch.nn.modules.flatten', 'torch.nn.parallel', 'torch.nn.parallel.parallel_apply', 'torch.nn.parallel.replicate', 'torch.cuda.comm', 'torch.cuda.nccl', 'torch.nn.parallel.data_parallel', 'torch.nn.parallel.scatter_gather', 'torch.nn.parallel._functions', 'torch.nn.parallel.distributed', 'torch._lowrank', 'torch._linalg_utils', 'torch.futures', 'torch.nn.intrinsic', 'torch.nn.intrinsic.modules', 'torch.nn.intrinsic.modules.fused', 'torch.nn.quantized', 'torch.nn.quantized.modules', 'torch.nn.quantized.modules.activation', 'torch.nn.quantized.functional', 'torch.nn.quantized.modules.utils', 'torch.nn.quantized.modules.batchnorm', 'torch.nn.quantized.modules.normalization', 'torch.nn.quantized.modules.conv', 'torch.nn.intrinsic.qat', 'torch.nn.intrinsic.qat.modules', 'torch.nn.intrinsic.qat.modules.linear_relu', 'torch.nn.qat', 'torch.nn.qat.modules', 'torch.nn.qat.modules.linear', 'torch.nn.qat.modules.conv', 'torch.nn.intrinsic.qat.modules.conv_fused', 'torch._ops', 'torch.jit', 'torch.jit.annotations', 'torch.jit._recursive', 'torch.jit.frontend', 'torch.jit._builtins', 'torch.backends', 'torch.backends.cudnn', 'torch.nn.quantized.modules.linear', 'torch.nn.quantized.modules.functional_modules', 'torch.optim', 'torch.optim.adadelta', 'torch.optim.optimizer', 'torch.optim.adagrad', 'torch.optim.adam', 'torch.optim.adamw', 'torch.optim.sparse_adam', 'torch.optim.adamax', 'torch.optim.asgd', 'torch.optim.sgd', 'torch.optim.rprop', 'torch.optim.rmsprop', 'torch.optim.lbfgs', 'torch.optim.lr_scheduler', 'torch.multiprocessing', 'torch.multiprocessing.reductions', 'multiprocessing.resource_sharer', 'torch.multiprocessing.spawn', 'torch.utils.backcompat', 'torch.onnx', 'torch.hub', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'tqdm.auto', 'tqdm.autonotebook', 'tqdm.notebook', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'torch.distributions', 'torch.distributions.bernoulli', 'torch.distributions.constraints', 'torch.distributions.exp_family', 'torch.distributions.distribution', 'torch.distributions.utils', 'torch.distributions.beta', 'torch.distributions.dirichlet', 'torch.distributions.binomial', 'torch.distributions.categorical', 'torch.distributions.cauchy', 'torch.distributions.chi2', 'torch.distributions.gamma', 'torch.distributions.constraint_registry', 'torch.distributions.transforms', 'torch.distributions.continuous_bernoulli', 'torch.distributions.exponential', 'torch.distributions.fishersnedecor', 'torch.distributions.geometric', 'torch.distributions.gumbel', 'torch.distributions.uniform', 'torch.distributions.transformed_distribution', 'torch.distributions.half_cauchy', 'torch.distributions.half_normal', 'torch.distributions.normal', 'torch.distributions.independent', 'torch.distributions.kl', 'torch.distributions.laplace', 'torch.distributions.lowrank_multivariate_normal', 'torch.distributions.multivariate_normal', 'torch.distributions.one_hot_categorical', 'torch.distributions.pareto', 'torch.distributions.poisson', 'torch.distributions.log_normal', 'torch.distributions.logistic_normal', 'torch.distributions.mixture_same_family', 'torch.distributions.multinomial', 'torch.distributions.negative_binomial', 'torch.distributions.relaxed_bernoulli', 'torch.distributions.relaxed_categorical', 'torch.distributions.studentT', 'torch.distributions.von_mises', 'torch.distributions.weibull', 'torch.backends.cuda', 'torch.backends.mkl', 'torch.backends.mkldnn', 'torch.backends.openmp', 'torch.backends.quantized', 'torch.quantization', 'torch.quantization.quantize', 'torch.quantization.default_mappings', 'torch.nn.intrinsic.quantized', 'torch.nn.intrinsic.quantized.modules', 'torch.nn.intrinsic.quantized.modules.linear_relu', 'torch.nn.intrinsic.quantized.modules.conv_relu', 'torch.nn.intrinsic.quantized.modules.bn_relu', 'torch.nn.quantized.dynamic', 'torch.nn.quantized.dynamic.modules', 'torch.nn.quantized.dynamic.modules.linear', 'torch.nn.quantized.dynamic.modules.rnn', 'torch.quantization.stubs', 'torch.quantization.qconfig', 'torch.quantization.observer', 'torch.quantization.fake_quantize', 'torch.quantization.fuse_modules', 'torch.quantization.quantize_jit', 'torch.utils.data', 'torch.utils.data.sampler', 'torch.utils.data.distributed', 'torch.utils.data.dataset', 'torch.utils.data.dataloader', 'torch.utils.data._utils', 'torch.utils.data._utils.worker', 'torch.utils.data._utils.signal_handling', 'torch.utils.data._utils.pin_memory', 'torch.utils.data._utils.collate', 'torch.utils.data._utils.fetch', 'torch.__config__', 'torch.__future__', 'torch._torch_docs', 'torch._tensor_docs', 'torch._storage_docs', 'torch._classes', 'torch.quasirandom', 'torch.multiprocessing._atfork', 'torch._lobpcg', 'pytorch_modeler', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/home/hiroki/.cache/matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /home/hiroki/.cache/matplotlib/fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
DEBUG:matplotlib.pyplot:Loaded backend module://ipykernel.pylab.backend_inline version unknown.
INFO: :load_directory <- development
INFO: :===========================
INFO: :[1/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_01
INFO: :test_file  num : 601
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f1315b3d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f1315b3d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-ExtraLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Black.ttc) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-DemiLight.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Light.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Thin.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Medium.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-SemiBold.ttc) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/hiroki/anaconda3/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12f90410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12f90410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12e39850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12e39850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12d68950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12d68950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12c8b490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12c8b490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f10340b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f10340b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f10226190>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f10226190>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f101264d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f101264d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_01.csv
INFO: :AUC : 0.5011383039271485
INFO: :pAUC : 0.5011592210365177
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_02
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefff0310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefff0310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeff18ed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeff18ed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f130718d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f130718d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefd3dd50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefd3dd50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefbf0890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefbf0890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefb2cb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefb2cb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefa1eb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefa1eb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef91d8d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef91d8d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_02.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_03
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef80c050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef80c050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef7080d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef7080d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef6089d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef6089d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef517450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef517450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef428a10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef428a10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefdc9a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefdc9a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef252950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef252950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef140550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef140550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_03.csv
INFO: :AUC : 0.5011337868480726
INFO: :pAUC : 0.5012032338646287
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyCar_id_04
INFO: :test_file  num : 602
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef02c590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef02c590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeef33bd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeef33bd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeee1d090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeee1d090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeed24390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeed24390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeec23050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeec23050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeeb31250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeeb31250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eee10cd90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eee10cd90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eee00bb50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eee00bb50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyCar_id_04.csv
INFO: :AUC : 0.5010997732426304
INFO: :pAUC : 0.5010242148886173
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[2/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_01
INFO: :test_file  num : 1181
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12b540d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12b540d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefba1590>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eefba1590>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f129c9390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f129c9390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f128cf4d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f128cf4d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f127bc090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f127bc090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f126c3a50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f126c3a50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f125b7410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f125b7410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f124bd950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f124bd950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_01.csv
INFO: :AUC : 0.5013713910761154
INFO: :pAUC : 0.5013427165094668
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_02
INFO: :test_file  num : 1136
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12379550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f12379550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f122b5750>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f122b5750>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f121b0190>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f121b0190>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f120ba510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f120ba510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11fb00d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11fb00d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11ebc410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11ebc410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11dbb510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11dbb510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef393690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eef393690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_02.csv
INFO: :AUC : 0.5017224702380952
INFO: :pAUC : 0.5016881666101344
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/ToyConveyor_id_03
INFO: :test_file  num : 1135
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11bf3c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f11bf3c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eede5cdd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eede5cdd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedd10c50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedd10c50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedc46a10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedc46a10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedb300d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eedb300d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeda47d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eeda47d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed93a950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed93a950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed832910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed832910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_ToyConveyor_id_03.csv
INFO: :AUC : 0.501728350914834
INFO: :pAUC : 0.5017257806566532
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[3/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_00
INFO: :test_file  num : 489
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed773f90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed773f90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed64fc10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eed64fc10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec953210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec953210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec85b090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec85b090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec75d650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec75d650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec635050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec635050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec551650>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec551650>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec452a10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec452a10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4926221079691517
INFO: :pAUC : 0.4934876670191822
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_02
INFO: :test_file  num : 441
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f1294e810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7f1294e810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec28ba50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec28ba50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec172150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec172150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec062810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec062810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddf2b510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddf2b510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edde33e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edde33e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddd31d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddd31d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddc157d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddc157d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.49296187683284454
INFO: :pAUC : 0.49370178693486966
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_04
INFO: :test_file  num : 430
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddb20450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eddb20450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edda25690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edda25690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd91c790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd91c790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd81eb90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd81eb90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd7111d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd7111d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd621a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd621a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd524b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd524b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd40b050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd40b050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.4930606060606061
INFO: :pAUC : 0.4937961787585848
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/fan_id_06
INFO: :test_file  num : 443
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd30a150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd30a150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd2178d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd2178d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd10b290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd10b290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec1ad690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eec1ad690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbef02d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbef02d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbdf1490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbdf1490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbc88190>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbc88190>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbbc3290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbbc3290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.4928571428571428
INFO: :pAUC : 0.4932249407358463
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[4/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_00
INFO: :test_file  num : 237
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbab2090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edbab2090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb9ac290>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb9ac290>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb8cde10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb8cde10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb7b0210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb7b0210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb6c6d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb6c6d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb5ccb50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb5ccb50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb4b2150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb4b2150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb3c3510>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb3c3510>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_00.csv
INFO: :AUC : 0.4972992700729927
INFO: :pAUC : 0.49753424227931664
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_02
INFO: :test_file  num : 205
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb2b0110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb2b0110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb1c9d10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb1c9d10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb0b37d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edb0b37d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edafc66d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edafc66d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edaec4b10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edaec4b10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edadb10d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edadb10d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edacc7a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edacc7a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edabb0090>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edabb0090>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_02.csv
INFO: :AUC : 0.4993333333333333
INFO: :pAUC : 0.4985627333640223
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_04
INFO: :test_file  num : 194
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edaab1150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edaab1150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda9a4050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda9a4050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd096850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7edd096850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda803a90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda803a90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda6b0cd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda6b0cd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda5d8210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda5d8210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda4d5d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda4d5d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed880d190>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed880d190>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_04.csv
INFO: :AUC : 0.500531914893617
INFO: :pAUC : 0.5000228534862994
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/pump_id_06
INFO: :test_file  num : 196
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8716d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8716d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8615990>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8615990>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8515dd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8515dd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8410410>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8410410>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8314e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8314e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8202390>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8202390>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8120d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed8120d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1ffa310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1ffa310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_pump_id_06.csv
INFO: :AUC : 0.5006249999999999
INFO: :pAUC : 0.5014769065520945
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[5/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_00
INFO: :test_file  num : 445
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1f39e90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1f39e90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1df8850>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1df8850>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1cefcd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1cefcd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1bea810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1bea810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1ae3c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1ae3c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed19e4790>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed19e4790>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed18dec10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed18dec10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed17d1450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed17d1450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_00.csv
INFO: :AUC : 0.4929565217391304
INFO: :pAUC : 0.49382151029748284
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_02
INFO: :test_file  num : 356
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed16e3210>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed16e3210>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed15e4450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed15e4450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed14dc550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed14dc550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed13e6e50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed13e6e50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed12cb050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed12cb050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda741750>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eda741750>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1111050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1111050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1029b90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed1029b90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_02.csv
INFO: :AUC : 0.49390625
INFO: :pAUC : 0.49443642588614395
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_04
INFO: :test_file  num : 267
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0f18d50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0f18d50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0e10bd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0e10bd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0cf7050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0cf7050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0bf1950>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0bf1950>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0adb250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed0adb250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed09e1250>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed09e1250>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed08e21d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed08e21d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed07de5d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed07de5d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_04.csv
INFO: :AUC : 0.49604790419161676
INFO: :pAUC : 0.49665223795159413
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/slider_id_06
INFO: :test_file  num : 178
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed06da890>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed06da890>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed05dfb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed05dfb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed04d56d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed04d56d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed03dba90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed03dba90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed02d4b90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed02d4b90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed01c8050>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed01c8050>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed00d5b50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ed00d5b50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecffd6910>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecffd6910>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_slider_id_06.csv
INFO: :AUC : 0.5028205128205128
INFO: :pAUC : 0.5025751191164725
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :===========================
INFO: :[6/6] /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve
INFO: :============== MODEL LOAD ==============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_00
INFO: :test_file  num : 213
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfed9ed0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfed9ed0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfdc71d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfdc71d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfcce150>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfcce150>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfbcd550>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfbcd550>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfac44d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecfac44d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf9d42d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf9d42d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf8cc710>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf8cc710>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf7dbc50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf7dbc50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_00.csv
INFO: :AUC : 0.4990265486725664
INFO: :pAUC : 0.4998811820955676
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_02
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf6d6d90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf6d6d90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf5c81d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf5c81d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf4d3bd0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf4d3bd0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf3cfb10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf3cfb10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf2bef90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf2bef90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf1d6d10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf1d6d10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf115690>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf115690>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf0109d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecf0109d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_02.csv
INFO: :AUC : 0.49894736842105264
INFO: :pAUC : 0.4998021369212505
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_04
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eceeb0810>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eceeb0810>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eceddb110>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7eceddb110>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ececd13d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ececd13d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecebe2e90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecebe2e90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecead0350>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecead0350>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece9d0e50>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece9d0e50>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece8b1310>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece8b1310>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece7bf2d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece7bf2d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_04.csv
INFO: :AUC : 0.49868421052631584
INFO: :pAUC : 0.49841709537000395
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :target_dir : /media/hiroki/working/research/dcase2020/datasets/DCASE2/dev_data/valve_id_06
INFO: :test_file  num : 214
INFO: :============== BEGIN TEST FOR A MACHINE ID ==============
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece6c98d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece6c98d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece5d2c90>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece5d2c90>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece4d0c10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece4d0c10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece3be6d0>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece3be6d0>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece2be610>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece2be610>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece1bba10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece1bba10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece0b9450>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ece0b9450>
DEBUG:matplotlib.colorbar:Setting pcolormesh
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecdfb1e10>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f7ecdfb1e10>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO: :anomaly score result ->  /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/anomaly_score_valve_id_06.csv
INFO: :AUC : 0.4985964912280702
INFO: :pAUC : 0.4979554148529218
INFO: :============ END OF TEST FOR A MACHINE ID ============
INFO: :AUC and pAUC results -> /media/hiroki/working/research/dcase2020/result/2D/CONV_AE/result/result.csv
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:24]
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:parse_part from 25 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:24]
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:parse_part from 25 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:24]
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:parse_part from 25 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:25]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:25] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 24
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:24]
DEBUG:parso.python.diff:parse_part from 24 to 24 (to 23 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 24; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:23] new[1:23]
DEBUG:parso.python.diff:copy old[4:23] new[1:23]
DEBUG:parso.python.diff:-> code[replace] old[24:24] new[24:25]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: slider
INFO:00_train.py:MAKE DATA_LOADER
INFO:00_train.py:TRAINING
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 25
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 25 (to 24 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:25]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 25; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:24] new[1:24]
DEBUG:parso.python.diff:copy old[4:24] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[25:25] new[25:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 26
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 26 (to 25 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:26]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 26; new: 27
DEBUG:parso.python.diff:-> code[equal] old[1:25] new[1:25]
DEBUG:parso.python.diff:copy old[4:25] new[1:23]
DEBUG:parso.python.diff:parse_part from 24 to 27 (to 26 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[26:26] new[26:27]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 27; new: 5
DEBUG:parso.python.diff:-> code[replace] old[1:27] new[1:5]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 5
DEBUG:parso.python.diff:-> code[equal] old[1:4] new[1:4]
DEBUG:parso.python.diff:parse_part from 1 to 5 (to 4 in part parser)
DEBUG:parso.python.diff:-> code[replace] old[5:5] new[5:5]
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 5; new: 18
DEBUG:parso.python.diff:-> code[replace] old[1:5] new[1:18]
DEBUG:parso.python.diff:parse_part from 1 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/os.py
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 18
DEBUG:parso.python.diff:-> code[equal] old[1:17] new[1:17]
DEBUG:parso.python.diff:copy old[5:17] new[1:17]
DEBUG:parso.python.diff:-> code[replace] old[18:18] new[18:18]
DEBUG:parso.python.diff:parse_part from 18 to 18 (to 17 in part parser)
DEBUG:parso.python.diff:diff parser end
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 18; new: 9
DEBUG:parso.python.diff:-> code[replace] old[1:18] new[1:9]
DEBUG:parso.python.diff:parse_part from 1 to 9 (to 8 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO:00_train.py:TARGET MACHINE_TYPE: fan
INFO:00_train.py:MAKE DATA_LOADER
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO:00_train.py:TRAINING
INFO:pytorch_modeler.py:Epoch 1/60:train_loss:895.019739, valid_loss:837.946429
INFO:pytorch_modeler.py:Epoch 2/60:train_loss:720.395363, valid_loss:631.384638
INFO:pytorch_modeler.py:Epoch 3/60:train_loss:501.984248, valid_loss:411.006887
INFO:pytorch_modeler.py:Epoch 4/60:train_loss:300.218936, valid_loss:222.135679
INFO:pytorch_modeler.py:Epoch 5/60:train_loss:152.635061, valid_loss:103.103632
INFO:pytorch_modeler.py:Epoch 6/60:train_loss:70.623345, valid_loss:52.570028
INFO:pytorch_modeler.py:Epoch 7/60:train_loss:37.811883, valid_loss:35.846429
INFO:pytorch_modeler.py:Epoch 8/60:train_loss:28.199945, valid_loss:31.802493
INFO:pytorch_modeler.py:Epoch 9/60:train_loss:25.769798, valid_loss:31.815342
INFO:pytorch_modeler.py:Epoch 10/60:train_loss:25.302884, valid_loss:30.570002
INFO:pytorch_modeler.py:Epoch 11/60:train_loss:25.158856, valid_loss:30.627344
INFO:pytorch_modeler.py:Epoch 12/60:train_loss:24.904917, valid_loss:30.851422
INFO:pytorch_modeler.py:Epoch 13/60:train_loss:25.001252, valid_loss:30.685488
INFO:pytorch_modeler.py:Epoch 14/60:train_loss:24.649926, valid_loss:30.456587
INFO:pytorch_modeler.py:Epoch 15/60:train_loss:24.576983, valid_loss:30.625327
INFO:pytorch_modeler.py:Epoch 16/60:train_loss:24.578474, valid_loss:30.317730
INFO:pytorch_modeler.py:Epoch 17/60:train_loss:24.286552, valid_loss:30.386466
INFO:pytorch_modeler.py:Epoch 18/60:train_loss:24.289919, valid_loss:30.319929
INFO:pytorch_modeler.py:Epoch 19/60:train_loss:24.403656, valid_loss:29.975469
INFO:pytorch_modeler.py:Epoch 20/60:train_loss:24.050660, valid_loss:29.756004
INFO:pytorch_modeler.py:Epoch 21/60:train_loss:24.230937, valid_loss:29.917477
INFO:pytorch_modeler.py:Epoch 22/60:train_loss:24.299847, valid_loss:30.222779
INFO:pytorch_modeler.py:Epoch 23/60:train_loss:24.048552, valid_loss:29.985243
INFO:pytorch_modeler.py:Epoch 24/60:train_loss:24.206796, valid_loss:29.667355
INFO:pytorch_modeler.py:Epoch 25/60:train_loss:24.071091, valid_loss:29.802527
INFO:pytorch_modeler.py:Epoch 26/60:train_loss:23.837803, valid_loss:29.722089
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/typing.py
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
DEBUG:parso.cache:pickle loaded: /home/hiroki/anaconda3/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
